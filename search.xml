<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>java程序流程控制</title>
    <url>//post/java%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html</url>
    <content><![CDATA[<h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><ol>
<li>Java提供了一些流程控制语句，来控制程序的执行语句。</li>
</ol>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>API介绍</title>
    <url>//post/API%E4%BB%8B%E7%BB%8D.html</url>
    <content><![CDATA[<h1 id="Java-API介绍"><a href="#Java-API介绍" class="headerlink" title="Java API介绍"></a>Java API介绍</h1><p>API（Application Programming Interface,应用程序编程接口）是一些预先定义的接口，目的是提供应用程序与开发人员基于某软件或硬件的以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p>
<p>java已经写好的程序，可以直接调用。</p>
<ol>
<li><p>Java API 下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk18-doc-downloads.html">API</a></p>
</li>
<li><p>键盘录入功能</p>
</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span>
<span class="token comment">//1. 导包操作(并不需要自己写入，以后通过工具进行导入更方便)</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScannerDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//键盘录入</span>
        <span class="token comment">//得到一个扫描器对象</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 调用sc对象的功能等待接收用户输入的数据</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您的年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//这个代码等待用户输入数据，直到用户输入完整数据并按倒回车键，就会把数据拿到</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的年龄是:"</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您的名字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的名字是:"</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>MD语法规则</title>
    <url>//post/MD%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99.html</url>
    <content><![CDATA[<p>#一、目录</p>
<pre><code>@[TOC](文章标题名)
一级目录 #+空格
二级目录 ##+空格
三级目录 ###+空格
......
</code></pre>
<h2 id="标题Setext方式"><a href="#标题Setext方式" class="headerlink" title="标题Setext方式"></a>标题Setext方式</h2><p>三个或更多</p>
<pre><code>大标题
===
小标题
---
</code></pre>
<h2 id="标题：Atx方式"><a href="#标题：Atx方式" class="headerlink" title="标题：Atx方式"></a>标题：Atx方式</h2><pre><code># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
</code></pre>
<p>#二、段落缩进</p>
<pre><code>半个字符大的空白&amp;ensp;或&amp;#8194;看，飞碟
全字符大的空白&amp;emsp;或&amp;#8195;看，飞碟
不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟
&amp;emsp;&amp;emsp;段落从此开始。
</code></pre>
<p>如下</p>
<p>全字符大的空白&amp;emsp;或&amp;#8195;看，飞碟<br>半个字符大的空白&amp;ensp;或&amp;#8194;看，飞碟<br>不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟<br>&amp;emsp;&amp;emsp;段落从此开始。<br>#三、格式<br>星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格</p>
<p>1.字体、字号、颜色</p>
<pre><code>斜体    _+内容+_

粗体    __+内容+__

粗斜体  ___+内容+___
</code></pre>
<p>斜体    <em>+斜体+</em></p>
<p>粗体    <strong>+粗体+</strong></p>
<p>粗斜体  <em><strong>+粗斜体+</strong></em></p>
<pre><code>    &lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;
    &lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;
    &lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;
    &lt;font color=#0099ff size=12 face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;
    &lt;font color=#00ffff size=3&gt;null&lt;/font&gt;
    &lt;font color=gray size=5&gt;gray&lt;/font&gt;
</code></pre>
<p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=#0099ff size=12 face="黑体">黑体</font><br><font color=#00ffff size=3>null</font><br><font color=gray size=5>gray</font></p>
<h2 id="2-分割线"><a href="#2-分割线" class="headerlink" title="2.分割线"></a>2.分割线</h2><p>三个或更多-_*，必须单独一行，可含空格</p>
<pre><code>        ---
        ***
        ___
</code></pre>
<hr>
<hr>
<hr>
<h2 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3.删除线"></a>3.删除线</h2><p>内容前后~~</p>
<pre><code>~~我是删除线~~
</code></pre>
<p><del>我是删除线</del></p>
<h2 id="4-下划线"><a href="#4-下划线" class="headerlink" title="4.下划线"></a>4.下划线</h2><pre><code>&lt;u&gt;我是下划线&lt;/u&gt;
</code></pre>
<p><u>我是下划线</u></p>
<h2 id="5-脚注"><a href="#5-脚注" class="headerlink" title="5.脚注"></a>5.脚注</h2><pre><code>创建脚注[^脚注]
[^脚注]:这里写脚注文本
</code></pre>
<p>创建脚注[^脚注]</p>
<h1 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h2><pre><code>* 无序列表1
* 无序列表2
</code></pre>
<ul>
<li>无序列表1</li>
<li>无序列表2</li>
</ul>
<h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h2><pre><code>1. 第一项
2. 第二项
3. 第三项
</code></pre>
<ol start="4">
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<h2 id="3-嵌套列表"><a href="#3-嵌套列表" class="headerlink" title="3.嵌套列表"></a>3.嵌套列表</h2><pre><code>    1.  第一项
    *  第一项子项
        * 第一项子项的子项
</code></pre>
<ol start="2">
<li>第二项</li>
</ol>
<ul>
<li>第二项子项<ul>
<li>第二项子项的子项</li>
</ul>
</li>
</ul>
<h1 id="五、区块引用"><a href="#五、区块引用" class="headerlink" title="五、区块引用"></a>五、区块引用</h1><pre><code>&gt;引用
&gt;&gt;引用的引用
&gt;&gt;&gt;引用的引用的引用
</code></pre>
<blockquote>
<p>引用</p>
<blockquote>
<p>引用的引用</p>
<blockquote>
<p>引用的引用的引用</p>
</blockquote>
</blockquote>
</blockquote>
<h1 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h1><h2 id="1-Tab键-代码"><a href="#1-Tab键-代码" class="headerlink" title="1.Tab键+代码"></a>1.Tab键+代码</h2><h2 id="2-反引号（-96-）包起来-x2F-三个反引号加语言名"><a href="#2-反引号（-96-）包起来-x2F-三个反引号加语言名" class="headerlink" title="2.反引号（&#96;）包起来&#x2F;三个反引号加语言名"></a>2.反引号（&#96;）包起来&#x2F;三个反引号加语言名</h2><p>行内代码</p>
<p><code>val s = &quot;hello Markdown&quot;     println( s )</code></p>
<p>三个反引号加语言名</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>段落代码<br>每行文字前加4个空格或者1个Tab</p>
<pre><code>val s = &quot;hello Markdown&quot;
println( s )
val s = &quot;hello Markdown&quot;
println( s )
</code></pre>
<h1 id="七、链接"><a href="#七、链接" class="headerlink" title="七、链接"></a>七、链接</h1><h2 id="1-文字超链：Inline方式"><a href="#1-文字超链：Inline方式" class="headerlink" title="1.文字超链：Inline方式"></a>1.文字超链：Inline方式</h2><pre><code>[文字](链接地址 &quot;提示内容&quot;)
如：
[A-Itfuture](https://blog.csdn.net/weixin_43431218?spm=1011.2124.3001.5343 &quot;A-itfuture的博客&quot;)
</code></pre>
<p><a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80" title="提示内容">文字</a><br>如：<br><a href="https://blog.csdn.net/weixin_43431218?spm=1011.2124.3001.5343" title="A-itfuture的博客">A-Itfuture</a></p>
<pre><code>例子：[中括号](小括号)
</code></pre>
<p>例子：<a href="%E5%B0%8F%E6%8B%AC%E5%8F%B7">中括号</a></p>
<h2 id="2-高级链接-索引超链：Reference方式"><a href="#2-高级链接-索引超链：Reference方式" class="headerlink" title="2.高级链接- 索引超链：Reference方式"></a>2.高级链接- 索引超链：Reference方式</h2><p>设置变量</p>
<pre><code>这是 [百度][1]的地址
此处空行
[1]:http://www.baidu.com
</code></pre>
<p><a href="http://www.baidu.com/">百度</a></p>
<h2 id="3-图片超链"><a href="#3-图片超链" class="headerlink" title="3.图片超链"></a>3.图片超链</h2><pre><code>![风景图](https://cn.bing.com/images/search?view=detailV2&amp;ccid=A6TpC4oo&amp;  
id=18E0F0DCC4093907CF8FCA6D75617F54A0D)
</code></pre>
<p><img data-src="https://i0.hdslb.com/bfs/new_dyn/2f428032e74925845e081f840246fead401742377.png%401295w.webp" alt="图片"></p>
<h2 id="4-自动链接"><a href="#4-自动链接" class="headerlink" title="4.自动链接"></a>4.自动链接</h2><p>尖括号</p>
<pre><code>&lt;http://www.baidu.com&gt;
</code></pre>
<p><a href="http://www.baidu.com/">http://www.baidu.com</a></p>
<h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p>| 分隔单元格 - - -分隔表头和其他行<br>对齐方式<br>  -：右对齐<br>  :-左对齐<br>  :—: 居中</p>
<pre><code>    | 表头一 | 表头二 | 表头三 |
    | :--- | :---: | ---: |
    | 1号|2号|3号|
    | 1号|2号|3号|
</code></pre>
<table>
<thead>
<tr>
<th align="left">表头一</th>
<th align="center">表头二</th>
<th align="right">表头三</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1月</td>
<td align="center">2号</td>
<td align="right">3号</td>
</tr>
<tr>
<td align="left">1月</td>
<td align="center">4号</td>
<td align="right">6号</td>
</tr>
</tbody></table>
<p>或者</p>
<pre><code>    项目     | 价格
    -------- | ---
    Computer | $1600
    Phone    | $12
    Pipe     | $1
</code></pre>
<table>
<thead>
<tr>
<th>项目</th>
<th>价格</th>
</tr>
</thead>
<tbody><tr>
<td>Computer</td>
<td>$1600</td>
</tr>
<tr>
<td>Phone</td>
<td>$12</td>
</tr>
<tr>
<td>Pipe</td>
<td>$1</td>
</tr>
</tbody></table>
<h1 id="九、其他"><a href="#九、其他" class="headerlink" title="九、其他"></a>九、其他</h1><h2 id="1-注释"><a href="#1-注释" class="headerlink" title="1.注释"></a>1.注释</h2><p>html的注释</p>
<pre><code>&lt;!-- 注释 --&gt;
</code></pre>
<!-- 注释 -->

<p>2.转义字符<br>用html的转义字符</p>
<p>Markdown中的转义字符为\，转义的有</p>
<pre><code>    \\ 反斜杠

    \` 反引号

    \* 星号

    \_ 下划线

    \&#123;\&#125; 大括号

    \[\] 中括号

    \(\) 小括号

    \# 井号

    \+ 加号

    \- 减号

    \. 英文句号

    \! 感叹号
</code></pre>
<p>\ 反斜杠</p>
<p>` 反引号</p>
<p>* 星号</p>
<p>_ 下划线</p>
<p>{} 大括号</p>
<p>[] 中括号</p>
<p>() 小括号</p>
<p># 井号</p>
<p>+ 加号</p>
<p>- 减号</p>
<p>. 英文句号</p>
<p>! 感叹号</p>
<h1 id="初级语法到此结束"><a href="#初级语法到此结束" class="headerlink" title="初级语法到此结束!"></a>初级语法到此结束!</h1>]]></content>
      <tags>
        <tag>MD语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>//post/hello-world.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>基本数据类型</title>
    <url>//post/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">数据类型</th>
<th align="center">关键字</th>
<th align="center">取值范围</th>
<th align="center">内存占用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">整数</td>
<td align="center">int</td>
<td align="center">-2的32次方~2的32次方-1</td>
<td align="center">4</td>
</tr>
<tr>
<td align="left">浮点数</td>
<td align="center">double</td>
<td align="center">4.9000000e-324 到3.402823+38</td>
<td align="center">8</td>
</tr>
<tr>
<td align="left">字符</td>
<td align="center">char</td>
<td align="center">0~65535 也就是2的16次方-1</td>
<td align="center">2</td>
</tr>
<tr>
<td align="left">布尔</td>
<td align="center">boolean</td>
<td align="center">true flase</td>
<td align="center">1</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>强制类型转换</title>
    <url>//post/%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<ol>
<li>强行将类型范围大的变量、数据赋值给类型范围小的变量</li>
<li>注意点 1. 可能出现数据丢失<br> 2.小数强制转换成整数是直接截断小数保留整数的。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//强制类型转换</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token comment">//byte b = a;会报错，大范围的数据不能直接赋值给类型范围小的类型</span>
        <span class="token comment">//正确如下</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> a<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20</span>
        <span class="token comment">//强制类型转换可能造成数据溢出丢失</span>


    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-1】  库房出入货物程序设计</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-1%E3%80%91-%E5%BA%93%E6%88%BF%E5%87%BA%E5%85%A5%E8%B4%A7%E7%89%A9%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1.html</url>
    <content><![CDATA[<h1 id="【案例2-1】-库房出入货物程序设计"><a href="#【案例2-1】-库房出入货物程序设计" class="headerlink" title="【案例2-1】  库房出入货物程序设计"></a>【案例2-1】  库房出入货物程序设计</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>任务描述
</code></pre>
现要对华为和小米两种手机产品进行入库，本案例要求编写一个模拟商品入库的程序，可以在控制台输入入库商品的数量，最后打印出仓库中所有商品详细信息以及所有商品的总库存数和库存商品总金额。<br>商品信息如下：<br>	品牌型号<br>	尺寸<br>	价格<br>	配置<br>	库存<br>	总价<ol start="2">
<li><pre><code>运行结果
</code></pre>
</li>
</ol>
</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><p>	学会分析”库房出入货物”任务实现的逻辑思路。<br>	能够独立完成”库房出入货物”程序的源代码编写、编译以及运行。<br>	能够在程序中使用算术运算符进行运算操作。<br>	能够在程序中使用赋值运算符进行赋值操作。<br>	掌握Java中的变量和运算符的知识点。</p>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><p>(1)	查看运行结果后，可以将该程序分为3部分实现（商品入库、库存清单、总库存数与库存商品总金额）<br>(2)	商品入库是变化的数据，需要记录商品信息后打印，通过运行结果，我们可以分析出如下属性。<br>品牌型号：商品的名称，String类型。<br>尺寸：手机的大小，double类型。<br>价格：手机的单价，double类型。<br>配置：手机的内存等配置，String类型。<br>库存数：此项数据为用户输入的数据，用户输入需要使用Scanner类，以下代码使用户能够从System.in中读取一个数字。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token class-name">Count</span><span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>总价：经过计算后打印，可以设置单独的变量，double类型。<br>(3)	库存清单中又包含了3部分，顶部为固定的数据，直接打印；中部为变化的数据，与商品入库的数据一致，打印出所有商品的详情，底部也为固定样式，直接打印即可。<br>(4)	总库存数与库存商品总金额是统计操作，需经过计算后打印，可以设置两个单独的变量：所有商品的库存总数：int类型。<br>库存商品总金额：double类型。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0201</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> access <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/*
 6 		 *现在有两款手机华为与小米需要做入库处理，我们需要编写一个程序来实现商品的入库，
 7 	      *入库完成后，打印入库商品的详细信息并计算出入库商品的数量与入库商品总金额。
 8 		 */</span>
        <span class="token comment">//华为手机</span>
        <span class="token class-name">String</span> huaweiBrand <span class="token operator">=</span><span class="token string">"华为"</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiSize <span class="token operator">=</span><span class="token number">5.5</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiPrice <span class="token operator">=</span><span class="token number">3688.88</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span>  huaweiConfig<span class="token operator">=</span><span class="token string">"8+128g 全面刘海屏"</span><span class="token punctuation">;</span>
        <span class="token comment">//小米手机</span>
        <span class="token class-name">String</span>  xiaomiBrand <span class="token operator">=</span><span class="token string">"小米"</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiSize<span class="token operator">=</span><span class="token number">5.0</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiPrice<span class="token operator">=</span><span class="token number">2988.88</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span>  xiaomiConfig<span class="token operator">=</span><span class="token string">"4+64g 全面屏"</span><span class="token punctuation">;</span>
        <span class="token comment">//华为手机入库</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号："</span><span class="token operator">+</span>huaweiBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"尺寸："</span><span class="token operator">+</span>huaweiSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"价格："</span><span class="token operator">+</span>huaweiPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置："</span><span class="token operator">+</span>huaweiConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入"</span><span class="token operator">+</span>huaweiBrand<span class="token operator">+</span><span class="token string">"手机的库存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> huanweiCount<span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiTotal<span class="token operator">=</span>huanweiCount<span class="token operator">*</span>huaweiPrice<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存"</span><span class="token operator">+</span>huaweiBrand<span class="token operator">+</span><span class="token string">"手机的总金额:"</span><span class="token operator">+</span>huaweiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//小米手机入库</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号："</span><span class="token operator">+</span>xiaomiBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"尺寸："</span><span class="token operator">+</span>xiaomiSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"价格："</span><span class="token operator">+</span>xiaomiPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置："</span><span class="token operator">+</span>xiaomiConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入"</span><span class="token operator">+</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"手机的库存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> xiaomiCount<span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiTotal<span class="token operator">=</span>xiaomiCount<span class="token operator">*</span>xiaomiPrice<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存"</span><span class="token operator">+</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"手机的总金额："</span><span class="token operator">+</span>xiaomiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//库存清单</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------库存清单------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号   尺寸        价格                 配置        库存数量    总价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>huaweiBrand<span class="token operator">+</span><span class="token string">"       "</span><span class="token operator">+</span>huaweiSize<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiPrice<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiConfig<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huanweiCount<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"       "</span><span class="token operator">+</span>xiaomiSize<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiPrice<span class="token operator">+</span><span class="token string">"          "</span><span class="token operator">+</span>xiaomiConfig<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiCount<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> total<span class="token operator">=</span>huanweiCount<span class="token operator">+</span>xiaomiCount<span class="token punctuation">;</span>
        <span class="token keyword">double</span> totalMoney<span class="token operator">=</span>huaweiTotal<span class="token operator">+</span>xiaomiTotal<span class="token punctuation">;</span>
        <span class="token comment">//总库存数量与库存总价</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总库存："</span><span class="token operator">+</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存总价："</span><span class="token operator">+</span>totalMoney<span class="token operator">+</span><span class="token string">"￥"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第10<del>18行代码记录了清单中2种商品的详细信息，包括品牌型号、尺寸、价格、配置和库存数；第20</del>39行代码是商品入库的代码，先打印商品的详细信息，用户在输入入库的数量，计算出总价，最后打印即可。第41<del>52行代码用于打印所有商品的信息，需要注意的是，此处商品信息应该与列表顶部的商品信息的顺序一致，否则会造成商品信息显示错乱；第50</del>55行显示的是清单底部信息，包括总库存数与库存商品的总金额，它们都需要通过计算获得。</p>
]]></content>
      <tags>
        <tag>实例</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇文章</title>
    <url>//post/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>自动类型转换</title>
    <url>//post/%E8%87%AA%E5%8A%A8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>byte–short–int–long–float–double</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//自动类型转换</span>
        <span class="token comment">//类型范围小的变量可以直接赋值给类型范围大的变量</span>
        <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> db <span class="token operator">=</span> age <span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为23.0</span>
        
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>运算符</title>
    <url>//post/%E8%BF%90%E7%AE%97%E7%AC%A6.html</url>
    <content><![CDATA[<h1 id="基本算数运算符"><a href="#基本算数运算符" class="headerlink" title="基本算数运算符"></a>基本算数运算符</h1><p>1.算数运算符</p>
<pre><code>    + - * 、 %
    加减乘除取余
</code></pre>
<p>2.注意点<br>两个整数做除法，其结果一定是整数</p>
<p>3.案例：数值拆分<br>需求：一个三位数拆分出个位、十位、百位。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorText2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：一个三位数拆分出个位、十位、百位。</span>

        <span class="token keyword">int</span> date <span class="token operator">=</span> <span class="token number">963</span><span class="token punctuation">;</span>

        <span class="token comment">//各位</span>
        <span class="token keyword">int</span> ge <span class="token operator">=</span> date<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"个位是"</span><span class="token operator">+</span>ge<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//十位</span>
        <span class="token keyword">int</span> shi <span class="token operator">=</span> date<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"十位是"</span><span class="token operator">+</span>shi<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//百位</span>
        <span class="token keyword">int</span> bai <span class="token operator">=</span> date<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"百位是"</span><span class="token operator">+</span>bai<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="符号做连接符"><a href="#符号做连接符" class="headerlink" title="+符号做连接符"></a>+符号做连接符</h1><p>“+”符号与字符串运算时是用作连接符的，其结果依然是字符串。</p>
<h1 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h1><p>++ 自增 变量自身的值加1<br>– 自减 变量自身的值减1</p>
<ol>
<li>++和–可以放在变量的前后边</li>
<li>++ – 只能操作变量，不能操作字面量的。</li>
<li>单独使用时，自增自减符号在变量前后没有区别</li>
</ol>
<ul>
<li>非单独使用时：在变量前，则先使用</li>
<li>非单独使用时：在变量后，则后使用</li>
</ul>
<p> #自增自减案例</p>
 <pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token comment">//拓展案例</span>
<span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token comment">//k 3 4 5</span>
<span class="token comment">//p 5 4 3</span>
<span class="token comment">//rs 3 + 5 - 4 + 4 - 5 + 4 + 2</span>
<span class="token keyword">int</span> rs <span class="token operator">=</span> k<span class="token operator">++</span> <span class="token operator">+</span> <span class="token operator">++</span>k <span class="token operator">-</span> <span class="token operator">--</span>p <span class="token operator">+</span> p<span class="token operator">--</span> <span class="token operator">-</span> k<span class="token operator">--</span> <span class="token operator">+</span> <span class="token operator">++</span>p <span class="token operator">+</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//k=4</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//p=4</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//rs=9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><p>就是“&#x3D;”</p>
<pre><code>+= 加后赋值
-= 减后赋值
*= 乘后赋值
/= 除后复制
%= 取余后赋值
</code></pre>
<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><pre><code>== 相等
!= 不相等
&gt;  大于
&gt;= 大于等于
&lt;  小于
&lt;= 小于等于
</code></pre>
<h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><pre><code>&amp; 逻辑与   必须都为ture，结果才是ture；只要有一个是false，结果就是false
| 逻辑或   只要有一个ture，结果就是ture
！逻辑非   你真我假，你假我真。ture=false，false=ture
^ 逻辑异或 两个条件都是false或者两个都是ture则结果是false，两个条件不同结果是ture。
</code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//使用逻辑运算符</span>
        <span class="token keyword">double</span> size <span class="token operator">=</span> <span class="token number">9.8</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> storage <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
        <span class="token comment">//需求：尺寸大于6.95 内存大于8GB</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>size <span class="token operator">>=</span> <span class="token number">6.95</span> <span class="token operator">&amp;</span> storage <span class="token operator">>=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//需求：要么内存大于等于8GB，要么尺寸大于6.95</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>size <span class="token operator">>=</span> <span class="token number">6.95</span> <span class="token operator">|</span> storage <span class="token operator">>=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>

        <span class="token comment">//逻辑异或，两个结果不同才为true；</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为false</span>
        
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre><code>&amp;&amp;  短路与 判断结果与“&amp;&quot;相同，左边为false，右边则不执行
||  短路或 判断结果与“|&quot;相同，左边为ture，右边则不执行
</code></pre>
<p>注意：逻辑与”&amp;”,逻辑或”|”:无论左边是false还是true，右边都要执行。<br>    结果相同，过程不同。</p>
<h1 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h1><pre><code>格式：条件表达式？值1：值2；
</code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorDemo4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//三运运算符</span>
        <span class="token keyword">double</span> score <span class="token operator">=</span> <span class="token number">98</span> <span class="token punctuation">;</span>
        <span class="token class-name">String</span> rs <span class="token operator">=</span> score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">"考试通过"</span><span class="token operator">:</span><span class="token string">"挂科"</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//从两个整数中找到最大值</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> a <span class="token operator">></span> b <span class="token operator">?</span> a<span class="token operator">:</span> b<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h1><table>
<thead>
<tr>
<th align="center">优先级</th>
<th align="center">运算符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">()</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">!、 +、  -、 ++、 – 自右向左</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">*、&#x2F;、%</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">+、-</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;、instanceof</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">&#x3D;&#x3D;、!&#x3D;</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">&amp;</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">^</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">逻辑或</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">&amp;&amp;</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">逻辑异或</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">? :</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、&amp;&#x3D;、</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>表达式变量类型</title>
    <url>//post/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B.html</url>
    <content><![CDATA[<ol>
<li>小范围的类型会自动转换成大范围的类型运算。</li>
<li>最终类型由表达式中最高类型决定。</li>
<li>byte short char 是直接转换成int类型参与运算的。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDome</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//表达式的自动类型转换</span>
        <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> c <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> rs <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">;</span><span class="token comment">//转成double类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">double</span> rs2 <span class="token operator">=</span> a<span class="token operator">+</span>b <span class="token operator">-</span><span class="token number">2.3</span><span class="token punctuation">;</span><span class="token comment">//转成double类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//面试题</span>
        <span class="token keyword">byte</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> j <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> i<span class="token operator">+</span>j<span class="token punctuation">;</span><span class="token comment">//转成int类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
</search>
