<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Debug工具的使用</title>
    <url>//post/Debug%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8.html</url>
    <content><![CDATA[<h2 id="Debug工具的使用"><a href="#Debug工具的使用" class="headerlink" title="Debug工具的使用"></a>Debug工具的使用</h2><h3 id="Debug工具"><a href="#Debug工具" class="headerlink" title="Debug工具"></a>Debug工具</h3><ul>
<li>IDEA自带的断点调试（排错）工具，可以控制代码从断点开始一行一行的执行，然后详细观看程序执行的情况。</li>
</ul>
<h3 id="DEBUG工具基本使用步骤"><a href="#DEBUG工具基本使用步骤" class="headerlink" title="DEBUG工具基本使用步骤"></a>DEBUG工具基本使用步骤</h3><ol>
<li>在需要控制的代码左侧，点击一下，形成断点</li>
<li>选择使用Debug方式启动程序，启动后程序会在断点暂停</li>
<li>控制代码一行一行的往下执行</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo文章上传到Github</title>
    <url>//post/Hexo%E6%96%87%E7%AB%A0%E4%B8%8A%E4%BC%A0%E5%88%B0Github.html</url>
    <content><![CDATA[<h1 id="如何写文章"><a href="#如何写文章" class="headerlink" title="如何写文章"></a>如何写文章</h1><p>我使用vs code写博客文章<br>使用git命令<br><code>git n &quot;文章标题&quot;   </code><br>新建文章</p>
<h1 id="文章如何上传？"><a href="#文章如何上传？" class="headerlink" title="文章如何上传？"></a>文章如何上传？</h1><p><code>hexo clean</code> 清除缓存文件 db.json 和已生成的静态文件 public 。<br><code>hexo generate</code> 生成网站静态文件到默认设置的 public 文件夹。<br><code>hexo deploy</code> 自动生成网站静态文件，并部署到设定的仓库。</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean
hexo generate
hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h1 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h1><p><code>hexo s</code> 启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p><code>hexo new page aboutme</code> 新建一个标题为 aboutme 的页面，默认链接地址为 主页地址&#x2F;aboutme&#x2F;</p>
]]></content>
  </entry>
  <entry>
    <title>MD语法规则</title>
    <url>//post/MD%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99.html</url>
    <content><![CDATA[<p>#一、目录</p>
<pre><code>@[TOC](文章标题名)
一级目录 #+空格
二级目录 ##+空格
三级目录 ###+空格
......
</code></pre>
<h2 id="标题Setext方式"><a href="#标题Setext方式" class="headerlink" title="标题Setext方式"></a>标题Setext方式</h2><p>三个或更多</p>
<pre><code>大标题
===
小标题
---
</code></pre>
<h2 id="标题：Atx方式"><a href="#标题：Atx方式" class="headerlink" title="标题：Atx方式"></a>标题：Atx方式</h2><pre><code># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
</code></pre>
<p>#二、段落缩进</p>
<pre><code>半个字符大的空白&amp;ensp;或&amp;#8194;看，飞碟
全字符大的空白&amp;emsp;或&amp;#8195;看，飞碟
不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟
&amp;emsp;&amp;emsp;段落从此开始。
</code></pre>
<p>如下</p>
<p>全字符大的空白&amp;emsp;或&amp;#8195;看，飞碟<br>半个字符大的空白&amp;ensp;或&amp;#8194;看，飞碟<br>不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟<br>&amp;emsp;&amp;emsp;段落从此开始。<br>#三、格式<br>星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格</p>
<p>1.字体、字号、颜色</p>
<pre><code>斜体    _+内容+_

粗体    __+内容+__

粗斜体  ___+内容+___
</code></pre>
<p>斜体    <em>+斜体+</em></p>
<p>粗体    <strong>+粗体+</strong></p>
<p>粗斜体  <em><strong>+粗斜体+</strong></em></p>
<pre><code>    &lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;
    &lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;
    &lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;
    &lt;font color=#0099ff size=12 face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;
    &lt;font color=#00ffff size=3&gt;null&lt;/font&gt;
    &lt;font color=gray size=5&gt;gray&lt;/font&gt;
</code></pre>
<p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=#0099ff size=12 face="黑体">黑体</font><br><font color=#00ffff size=3>null</font><br><font color=gray size=5>gray</font></p>
<h2 id="2-分割线"><a href="#2-分割线" class="headerlink" title="2.分割线"></a>2.分割线</h2><p>三个或更多-_*，必须单独一行，可含空格</p>
<pre><code>        ---
        ***
        ___
</code></pre>
<hr>
<hr>
<hr>
<h2 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3.删除线"></a>3.删除线</h2><p>内容前后~~</p>
<pre><code>~~我是删除线~~
</code></pre>
<p><del>我是删除线</del></p>
<h2 id="4-下划线"><a href="#4-下划线" class="headerlink" title="4.下划线"></a>4.下划线</h2><pre><code>&lt;u&gt;我是下划线&lt;/u&gt;
</code></pre>
<p><u>我是下划线</u></p>
<h2 id="5-脚注"><a href="#5-脚注" class="headerlink" title="5.脚注"></a>5.脚注</h2><pre><code>创建脚注[^脚注]
[^脚注]:这里写脚注文本
</code></pre>
<p>创建脚注[^脚注]</p>
<h1 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h2><pre><code>* 无序列表1
* 无序列表2
</code></pre>
<ul>
<li>无序列表1</li>
<li>无序列表2</li>
</ul>
<h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h2><pre><code>1. 第一项
2. 第二项
3. 第三项
</code></pre>
<ol start="4">
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<h2 id="3-嵌套列表"><a href="#3-嵌套列表" class="headerlink" title="3.嵌套列表"></a>3.嵌套列表</h2><pre><code>    1.  第一项
    *  第一项子项
        * 第一项子项的子项
</code></pre>
<ol start="2">
<li>第二项</li>
</ol>
<ul>
<li>第二项子项<ul>
<li>第二项子项的子项</li>
</ul>
</li>
</ul>
<h1 id="五、区块引用"><a href="#五、区块引用" class="headerlink" title="五、区块引用"></a>五、区块引用</h1><pre><code>&gt;引用
&gt;&gt;引用的引用
&gt;&gt;&gt;引用的引用的引用
</code></pre>
<blockquote>
<p>引用</p>
<blockquote>
<p>引用的引用</p>
<blockquote>
<p>引用的引用的引用</p>
</blockquote>
</blockquote>
</blockquote>
<h1 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h1><h2 id="1-Tab键-代码"><a href="#1-Tab键-代码" class="headerlink" title="1.Tab键+代码"></a>1.Tab键+代码</h2><h2 id="2-反引号（-96-）包起来-x2F-三个反引号加语言名"><a href="#2-反引号（-96-）包起来-x2F-三个反引号加语言名" class="headerlink" title="2.反引号（&#96;）包起来&#x2F;三个反引号加语言名"></a>2.反引号（&#96;）包起来&#x2F;三个反引号加语言名</h2><p>行内代码</p>
<p><code>val s = &quot;hello Markdown&quot;     println( s )</code></p>
<p>三个反引号加语言名</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>段落代码<br>每行文字前加4个空格或者1个Tab</p>
<pre><code>val s = &quot;hello Markdown&quot;
println( s )
val s = &quot;hello Markdown&quot;
println( s )
</code></pre>
<h1 id="七、链接"><a href="#七、链接" class="headerlink" title="七、链接"></a>七、链接</h1><h2 id="1-文字超链：Inline方式"><a href="#1-文字超链：Inline方式" class="headerlink" title="1.文字超链：Inline方式"></a>1.文字超链：Inline方式</h2><pre><code>[文字](链接地址 &quot;提示内容&quot;)
如：
[A-Itfuture](https://blog.csdn.net/weixin_43431218?spm=1011.2124.3001.5343 &quot;A-itfuture的博客&quot;)
</code></pre>
<p><a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80" title="提示内容">文字</a><br>如：<br><a href="https://blog.csdn.net/weixin_43431218?spm=1011.2124.3001.5343" title="A-itfuture的博客">A-Itfuture</a></p>
<pre><code>例子：[中括号](小括号)
</code></pre>
<p>例子：<a href="%E5%B0%8F%E6%8B%AC%E5%8F%B7">中括号</a></p>
<h2 id="2-高级链接-索引超链：Reference方式"><a href="#2-高级链接-索引超链：Reference方式" class="headerlink" title="2.高级链接- 索引超链：Reference方式"></a>2.高级链接- 索引超链：Reference方式</h2><p>设置变量</p>
<pre><code>这是 [百度][1]的地址
此处空行
[1]:http://www.baidu.com
</code></pre>
<p><a href="http://www.baidu.com/">百度</a></p>
<h2 id="3-图片超链"><a href="#3-图片超链" class="headerlink" title="3.图片超链"></a>3.图片超链</h2><pre><code>![风景图](https://cn.bing.com/images/search?view=detailV2&amp;ccid=A6TpC4oo&amp;  
id=18E0F0DCC4093907CF8FCA6D75617F54A0D)
</code></pre>
<p><img data-src="https://i0.hdslb.com/bfs/new_dyn/2f428032e74925845e081f840246fead401742377.png%401295w.webp" alt="图片"></p>
<h2 id="4-自动链接"><a href="#4-自动链接" class="headerlink" title="4.自动链接"></a>4.自动链接</h2><p>尖括号</p>
<pre><code>&lt;http://www.baidu.com&gt;
</code></pre>
<p><a href="http://www.baidu.com/">http://www.baidu.com</a></p>
<h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p>| 分隔单元格 - - -分隔表头和其他行<br>对齐方式<br>  -：右对齐<br>  :-左对齐<br>  :—: 居中</p>
<pre><code>    | 表头一 | 表头二 | 表头三 |
    | :--- | :---: | ---: |
    | 1号|2号|3号|
    | 1号|2号|3号|
</code></pre>
<table>
<thead>
<tr>
<th align="left">表头一</th>
<th align="center">表头二</th>
<th align="right">表头三</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1月</td>
<td align="center">2号</td>
<td align="right">3号</td>
</tr>
<tr>
<td align="left">1月</td>
<td align="center">4号</td>
<td align="right">6号</td>
</tr>
</tbody></table>
<p>或者</p>
<pre><code>    项目     | 价格
    -------- | ---
    Computer | $1600
    Phone    | $12
    Pipe     | $1
</code></pre>
<table>
<thead>
<tr>
<th>项目</th>
<th>价格</th>
</tr>
</thead>
<tbody><tr>
<td>Computer</td>
<td>$1600</td>
</tr>
<tr>
<td>Phone</td>
<td>$12</td>
</tr>
<tr>
<td>Pipe</td>
<td>$1</td>
</tr>
</tbody></table>
<h1 id="九、其他"><a href="#九、其他" class="headerlink" title="九、其他"></a>九、其他</h1><h2 id="1-注释"><a href="#1-注释" class="headerlink" title="1.注释"></a>1.注释</h2><p>html的注释</p>
<pre><code>&lt;!-- 注释 --&gt;
</code></pre>
<!-- 注释 -->

<p>2.转义字符<br>用html的转义字符</p>
<p>Markdown中的转义字符为\，转义的有</p>
<pre><code>    \\ 反斜杠

    \` 反引号

    \* 星号

    \_ 下划线

    \&#123;\&#125; 大括号

    \[\] 中括号

    \(\) 小括号

    \# 井号

    \+ 加号

    \- 减号

    \. 英文句号

    \! 感叹号
</code></pre>
<p>\ 反斜杠</p>
<p>` 反引号</p>
<p>* 星号</p>
<p>_ 下划线</p>
<p>{} 大括号</p>
<p>[] 中括号</p>
<p>() 小括号</p>
<p># 井号</p>
<p>+ 加号</p>
<p>- 减号</p>
<p>. 英文句号</p>
<p>! 感叹号</p>
<h1 id="初级语法到此结束"><a href="#初级语法到此结束" class="headerlink" title="初级语法到此结束!"></a>初级语法到此结束!</h1>]]></content>
      <tags>
        <tag>MD语法</tag>
      </tags>
  </entry>
  <entry>
    <title>String常见面试题</title>
    <url>//post/String%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.html</url>
    <content><![CDATA[<h1 id="String常见面试题"><a href="#String常见面试题" class="headerlink" title="String常见面试题"></a>String常见面试题</h1><h2 id="String常见面试题-1"><a href="#String常见面试题-1" class="headerlink" title="String常见面试题"></a>String常见面试题</h2><ol>
<li>问题1：下列代码的运行结果是什么？<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220730231009.png" alt="问题1"><br>（1）创建了两个对象。<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220730231141.png" alt="问题2"><br>（2）结果是false。</li>
<li>问题2<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220730231514.png" alt="Text3"><br>（1）结果是false。<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220730231722.png" alt="Text3"><br>（2）结果为true，因为Java存在编译优化机制，程序在编译时：”a””b””c”会直接转成”abc”。</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>//post/hello-world.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>API介绍</title>
    <url>//post/API%E4%BB%8B%E7%BB%8D.html</url>
    <content><![CDATA[<h1 id="Java-API介绍"><a href="#Java-API介绍" class="headerlink" title="Java API介绍"></a>Java API介绍</h1><p>API（Application Programming Interface,应用程序编程接口）是一些预先定义的接口，目的是提供应用程序与开发人员基于某软件或硬件的以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p>
<p>java已经写好的程序，可以直接调用。</p>
<ol>
<li><p>Java API 下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk18-doc-downloads.html">API</a></p>
</li>
<li><p>键盘录入功能</p>
</li>
</ol>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span>
<span class="token comment">//1. 导包操作(并不需要自己写入，以后通过工具进行导入更方便)</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScannerDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//键盘录入</span>
        <span class="token comment">//得到一个扫描器对象</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 调用sc对象的功能等待接收用户输入的数据</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您的年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//这个代码等待用户输入数据，直到用户输入完整数据并按倒回车键，就会把数据拿到</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的年龄是:"</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您的名字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的名字是:"</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>【实验2-3】  超市购物小程序</title>
    <url>//post/%E3%80%90%E5%AE%9E%E9%AA%8C2-3%E3%80%91-%E8%B6%85%E5%B8%82%E8%B4%AD%E7%89%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
    <content><![CDATA[<h1 id="【实验2-3】-超市购物小程序"><a href="#【实验2-3】-超市购物小程序" class="headerlink" title="【实验2-3】  超市购物小程序"></a>【实验2-3】  超市购物小程序</h1><h2 id="【任务介绍】"><a href="#【任务介绍】" class="headerlink" title="【任务介绍】"></a>【任务介绍】</h2><ol>
<li>任务描述<br>编写一个超市购物程序，在一家超市有牙刷、毛巾、水杯、苹果和香蕉五种商品，商品价格如下表所示。<br>编号	商品名称	价格<br>1   牙刷	8.8元<br>2	毛巾	10.0元<br>3	水杯	18.8元<br>4	苹果	12.5元<br>5	香蕉	15.5元<br>用户输入商品序列号进行商品购买，用户输入购买数量后计算出所需要花费的钱，一次购买结束后，需要用户输入“Y”或“N”，“Y”代表继续购买，“N”代表购物结束。</li>
<li>运行结果</li>
</ol>
<h2 id="【任务目标】"><a href="#【任务目标】" class="headerlink" title="【任务目标】"></a>【任务目标】</h2><ul>
<li>学会分析” 超市购物 ”程序的实现思路。</li>
<li>根据思路独立完成” 超市购物 ”的源代码编写、编译及运行。</li>
<li>掌握在程序中使用while循环结构和switch循环结构语句进行运算操作。</li>
</ul>
<h2 id="【实现思路】"><a href="#【实现思路】" class="headerlink" title="【实现思路】"></a>【实现思路】</h2><ol>
<li>从运行结果可以看出，我们需要先定义5个商品的价格，double类型，再打印出5种商品的价格。</li>
<li>从运行结果可以看出，这里我们让用户填写购买商品的序列号以及购买的数量，需要使用到Scanner类，</li>
<li>从运行结果可以看出，我们循环了选择购买的条件语句，这里使用while嵌套switch语句可以达到我们的目的，我们需要使用while循环switch的选择结构，而switch是判断用户选择购买商品序列号的条件语句。</li>
</ol>
<h2 id="【实现代码】"><a href="#【实现代码】" class="headerlink" title="【实现代码】"></a>【实现代码】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0203</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperMarket</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">double</span> toothbrush <span class="token operator">=</span> <span class="token number">8.8</span><span class="token punctuation">;</span> <span class="token comment">//牙刷价格</span>
        <span class="token keyword">double</span> towel <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token comment">//毛巾价格</span>
        <span class="token keyword">double</span> cup <span class="token operator">=</span> <span class="token number">18.8</span><span class="token punctuation">;</span> <span class="token comment">//水杯价格</span>
        <span class="token keyword">double</span> apple <span class="token operator">=</span> <span class="token number">12.5</span><span class="token punctuation">;</span> <span class="token comment">//苹果价格</span>
        <span class="token keyword">double</span> banana <span class="token operator">=</span> <span class="token number">15.5</span><span class="token punctuation">;</span> <span class="token comment">//香蕉价格</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------------超市---------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1.牙刷的价格为："</span> <span class="token operator">+</span> toothbrush <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2.毛巾的价格为："</span> <span class="token operator">+</span> towel <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3.水杯的价格为："</span> <span class="token operator">+</span> cup <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"4.苹果的价格为："</span> <span class="token operator">+</span> apple <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"5.香蕉的价格为："</span> <span class="token operator">+</span> banana <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">"Y"</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Y"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//当a=Y时，循环继续</span>
            <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你想要的商品序号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要几只牙刷"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> sctoothbrush <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入购买数量</span>
                    <span class="token keyword">double</span> toothbrushsum <span class="token operator">=</span> toothbrush <span class="token operator">*</span> sctoothbrush<span class="token punctuation">;</span><span class="token comment">//计算购买总额</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买了"</span> <span class="token operator">+</span> sctoothbrush <span class="token operator">+</span> <span class="token string">"只牙刷，共花费"</span> <span class="token operator">+</span> toothbrushsum <span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要继续购买请输入Y，否则输入N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    a <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//给a赋值</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要几张毛巾"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> sctowel <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">double</span> towelsum <span class="token operator">=</span> towel <span class="token operator">*</span> sctowel<span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买了"</span> <span class="token operator">+</span> sctowel <span class="token operator">+</span> <span class="token string">"张毛巾，共花费"</span> <span class="token operator">+</span> towelsum <span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要继续购买请输入Y，否则输入N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    a <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要几张毛巾"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> sccup <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">double</span> cupsum <span class="token operator">=</span> cup <span class="token operator">*</span> sccup<span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买了"</span> <span class="token operator">+</span> sccup <span class="token operator">+</span> <span class="token string">"张毛巾，共花费"</span> <span class="token operator">+</span> cupsum <span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要继续购买请输入Y，否则输入N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    a <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要几张毛巾"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> scapple <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">double</span> applesum <span class="token operator">=</span> towel <span class="token operator">*</span> scapple<span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买了"</span> <span class="token operator">+</span> scapple <span class="token operator">+</span> <span class="token string">"张毛巾，共花费"</span> <span class="token operator">+</span> applesum <span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要继续购买请输入Y，否则输入N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    a <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要几张毛巾"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> scbanana <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">double</span> bananasum <span class="token operator">=</span> towel <span class="token operator">*</span> scbanana<span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买了"</span> <span class="token operator">+</span> scbanana <span class="token operator">+</span> <span class="token string">"张毛巾，共花费"</span> <span class="token operator">+</span> bananasum <span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要继续购买请输入Y，否则输入N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    a <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎下次光临。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>第9 ~ 16行代码我们定义了5种商品的单价以及一个String类型的数据”a”与int类型的数据”i”，”a”用于while循环条件，判断是否继续循环，”i”用于switch选择语句的条件；第17 ~2 2行代码打印了各个商品的价格供用户选择，第23 ~ 75行代码，为了实现用户多次购买，我们使用while循环语句嵌套switch条件语句。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>return关键字</title>
    <url>//post/return%E5%85%B3%E9%94%AE%E5%AD%97.html</url>
    <content><![CDATA[<h1 id="return关键字"><a href="#return关键字" class="headerlink" title="return关键字"></a>return关键字</h1><h2 id="return关键字单独使用"><a href="#return关键字单独使用" class="headerlink" title="return关键字单独使用"></a>return关键字单独使用</h2><ul>
<li>return; —&gt; 可以立即跳出并结束当前方法的执行；return关键字单独使用可以放在任何方法中。</li>
</ul>
<ol>
<li>示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">returndemo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReturnDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//明确return关键字的作用</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main开始："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">chu</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main结束."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">chu</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的数据有问题，除数不能为0！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//除数为0，程序不能再执行下去，用return结束并返回</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"结果是"</span> <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结：如果要直接结束当前方法的执行，怎么解决？<ul>
<li>return；跳出并立即结束所在方法的执行。</li>
<li>break；跳出并结束当前所在循环的执行。</li>
<li>continue；结束当前所在循环的当次继续，进入下一次执行。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>String概述、对象创建的原理</title>
    <url>//post/String%E6%A6%82%E8%BF%B0%E3%80%81%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E7%9A%84%E5%8E%9F%E7%90%86.html</url>
    <content><![CDATA[<h1 id="String概述、对象创建的原理"><a href="#String概述、对象创建的原理" class="headerlink" title="String概述、对象创建的原理"></a>String概述、对象创建的原理</h1><h2 id="String概述"><a href="#String概述" class="headerlink" title="String概述"></a>String概述</h2><ol>
<li>String概述</li>
</ol>
<ul>
<li>java.lang.String类代表字符串，String类定义的变量可以用于只想字符串对象，然后操作该字符串。</li>
<li>Java程序中的所有字符串文字（例如“abc”）都为此类的对象。</li>
</ul>
<ol start="2">
<li>String类的特点讲解</li>
</ol>
<ul>
<li>String其实常被称为不可变字符串类型，它的对象在创建后不能被更改。</li>
<li>示例<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">string</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"一二"</span><span class="token punctuation">;</span>
        name <span class="token operator">+=</span> <span class="token string">"三四"</span><span class="token punctuation">;</span>
        name <span class="token operator">+=</span> <span class="token string">"五六"</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>内存图解<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220729221554.png" alt="String内存图解"></li>
</ul>
<ol start="3">
<li>字符串对象存在哪里？</li>
</ol>
<ul>
<li>以””方式给出的字符串对象，在字符串常量池中储存。</li>
</ul>
<ol start="4">
<li>总结<br> （1）String是什么，可以做什么？<ul>
<li>字符串类型，可以定义字符串类型变量指向字符串对象。<br> （2）String是不可变字符串的原因？</li>
<li>String变量每次的修改都是产生并指向新的字符串对象。</li>
<li>原来的字符串对象都是没有改变的，所以称不可变字符串。</li>
</ul>
</li>
</ol>
<h2 id="String创建对象的2种方式"><a href="#String创建对象的2种方式" class="headerlink" title="String创建对象的2种方式"></a>String创建对象的2种方式</h2><ol>
<li><p>创建字符串对象的2种方式</p>
<ul>
<li>方式一：直接使用””定义。（推荐方式）<br> <code>String name = &quot;传智教育&quot;;</code></li>
<li>方式二：通过String类的构造器创建对象。<br> <img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220729222833.png" alt="String构造对象"> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">String</span> original<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>示例 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">string</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringDemo2</span> <span class="token punctuation">&#123;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"Hello World"</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/**
     *
     1.public String();//创建一个空白字符串，不含有任何内容(几乎不用)
     2.public String(String original);//根据传入字符的内容，来创建字符串对象
     3.public String(char[] value);//根据字符数组的内容来创建字符对象
     4.public String(byte[] bytes);//根据字节数组的内容来创建字符对象
     */</span>
    <span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'c'</span><span class="token punctuation">,</span><span class="token char">'d'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//3</span>
    <span class="token class-name">String</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> s4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span><span class="token punctuation">;</span>



    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>运行结果</li>
</ul>
 <pre class="line-numbers language-java" data-language="java"><code class="language-java">name

<span class="token class-name">Hello</span> <span class="token class-name">World</span>
abcd
abcABC
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>有什么区别</p>
</li>
</ol>
<ul>
<li>以””方式给出的字符串对象，在字符串常量池储存，而且相同内容只会再其中储存一份。<br><img data-src="https://unpkg.com/gh/blog_img@main/Blog20220729235416.png" alt="内存图解"></li>
<li>通过构造器new对象，每new一次都会产生一个新对象，放在堆内存中。<br><img data-src="https://unpkg.com/gh/blog_img@main/Blog20220729235701.png" alt="内存图解"></li>
</ul>
<ol start="2">
<li>总结<br> （1）字符串对象的特点有哪些？<ul>
<li>双引号创建的字符串对象，在字符串常量中存储同一个。</li>
<li>通过new构造器创建的字符串对象，在堆内存中分开储存。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-1】  库房出入货物程序设计</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-1%E3%80%91-%E5%BA%93%E6%88%BF%E5%87%BA%E5%85%A5%E8%B4%A7%E7%89%A9%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1.html</url>
    <content><![CDATA[<h1 id="【案例2-1】-库房出入货物程序设计"><a href="#【案例2-1】-库房出入货物程序设计" class="headerlink" title="【案例2-1】  库房出入货物程序设计"></a>【案例2-1】  库房出入货物程序设计</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>任务描述
</code></pre>
现要对华为和小米两种手机产品进行入库，本案例要求编写一个模拟商品入库的程序，可以在控制台输入入库商品的数量，最后打印出仓库中所有商品详细信息以及所有商品的总库存数和库存商品总金额。<br>商品信息如下：<br>	品牌型号<br>	尺寸<br>	价格<br>	配置<br>	库存<br>	总价<ol start="2">
<li><pre><code>运行结果
</code></pre>
</li>
</ol>
</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><p>	学会分析”库房出入货物”任务实现的逻辑思路。<br>	能够独立完成”库房出入货物”程序的源代码编写、编译以及运行。<br>	能够在程序中使用算术运算符进行运算操作。<br>	能够在程序中使用赋值运算符进行赋值操作。<br>	掌握Java中的变量和运算符的知识点。</p>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><p>(1)	查看运行结果后，可以将该程序分为3部分实现（商品入库、库存清单、总库存数与库存商品总金额）<br>(2)	商品入库是变化的数据，需要记录商品信息后打印，通过运行结果，我们可以分析出如下属性。<br>品牌型号：商品的名称，String类型。<br>尺寸：手机的大小，double类型。<br>价格：手机的单价，double类型。<br>配置：手机的内存等配置，String类型。<br>库存数：此项数据为用户输入的数据，用户输入需要使用Scanner类，以下代码使用户能够从System.in中读取一个数字。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token class-name">Count</span><span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>总价：经过计算后打印，可以设置单独的变量，double类型。<br>(3)	库存清单中又包含了3部分，顶部为固定的数据，直接打印；中部为变化的数据，与商品入库的数据一致，打印出所有商品的详情，底部也为固定样式，直接打印即可。<br>(4)	总库存数与库存商品总金额是统计操作，需经过计算后打印，可以设置两个单独的变量：所有商品的库存总数：int类型。<br>库存商品总金额：double类型。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0201</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> access <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/*
 6 		 *现在有两款手机华为与小米需要做入库处理，我们需要编写一个程序来实现商品的入库，
 7 	      *入库完成后，打印入库商品的详细信息并计算出入库商品的数量与入库商品总金额。
 8 		 */</span>
        <span class="token comment">//华为手机</span>
        <span class="token class-name">String</span> huaweiBrand <span class="token operator">=</span><span class="token string">"华为"</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiSize <span class="token operator">=</span><span class="token number">5.5</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiPrice <span class="token operator">=</span><span class="token number">3688.88</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span>  huaweiConfig<span class="token operator">=</span><span class="token string">"8+128g 全面刘海屏"</span><span class="token punctuation">;</span>
        <span class="token comment">//小米手机</span>
        <span class="token class-name">String</span>  xiaomiBrand <span class="token operator">=</span><span class="token string">"小米"</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiSize<span class="token operator">=</span><span class="token number">5.0</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiPrice<span class="token operator">=</span><span class="token number">2988.88</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span>  xiaomiConfig<span class="token operator">=</span><span class="token string">"4+64g 全面屏"</span><span class="token punctuation">;</span>
        <span class="token comment">//华为手机入库</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号："</span><span class="token operator">+</span>huaweiBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"尺寸："</span><span class="token operator">+</span>huaweiSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"价格："</span><span class="token operator">+</span>huaweiPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置："</span><span class="token operator">+</span>huaweiConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入"</span><span class="token operator">+</span>huaweiBrand<span class="token operator">+</span><span class="token string">"手机的库存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> huanweiCount<span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> huaweiTotal<span class="token operator">=</span>huanweiCount<span class="token operator">*</span>huaweiPrice<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存"</span><span class="token operator">+</span>huaweiBrand<span class="token operator">+</span><span class="token string">"手机的总金额:"</span><span class="token operator">+</span>huaweiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//小米手机入库</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号："</span><span class="token operator">+</span>xiaomiBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"尺寸："</span><span class="token operator">+</span>xiaomiSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"价格："</span><span class="token operator">+</span>xiaomiPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置："</span><span class="token operator">+</span>xiaomiConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入"</span><span class="token operator">+</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"手机的库存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> xiaomiCount<span class="token operator">=</span>sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> xiaomiTotal<span class="token operator">=</span>xiaomiCount<span class="token operator">*</span>xiaomiPrice<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存"</span><span class="token operator">+</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"手机的总金额："</span><span class="token operator">+</span>xiaomiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//库存清单</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------库存清单------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌型号   尺寸        价格                 配置        库存数量    总价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>huaweiBrand<span class="token operator">+</span><span class="token string">"       "</span><span class="token operator">+</span>huaweiSize<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiPrice<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiConfig<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huanweiCount<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>huaweiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xiaomiBrand<span class="token operator">+</span><span class="token string">"       "</span><span class="token operator">+</span>xiaomiSize<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiPrice<span class="token operator">+</span><span class="token string">"          "</span><span class="token operator">+</span>xiaomiConfig<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiCount<span class="token operator">+</span><span class="token string">"      "</span><span class="token operator">+</span>xiaomiTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> total<span class="token operator">=</span>huanweiCount<span class="token operator">+</span>xiaomiCount<span class="token punctuation">;</span>
        <span class="token keyword">double</span> totalMoney<span class="token operator">=</span>huaweiTotal<span class="token operator">+</span>xiaomiTotal<span class="token punctuation">;</span>
        <span class="token comment">//总库存数量与库存总价</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总库存："</span><span class="token operator">+</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存总价："</span><span class="token operator">+</span>totalMoney<span class="token operator">+</span><span class="token string">"￥"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第10<del>18行代码记录了清单中2种商品的详细信息，包括品牌型号、尺寸、价格、配置和库存数；第20</del>39行代码是商品入库的代码，先打印商品的详细信息，用户在输入入库的数量，计算出总价，最后打印即可。第41<del>52行代码用于打印所有商品的信息，需要注意的是，此处商品信息应该与列表顶部的商品信息的顺序一致，否则会造成商品信息显示错乱；第50</del>55行显示的是清单底部信息，包括总库存数与库存商品的总金额，它们都需要通过计算获得。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-6】  登录注册小程序</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-6%E3%80%91-%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
    <content><![CDATA[<h1 id="【案例2-6】-登录注册小程序"><a href="#【案例2-6】-登录注册小程序" class="headerlink" title="【案例2-6】  登录注册小程序"></a>【案例2-6】  登录注册小程序</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li>任务描述<br>编写程序实现简单的登录注册功能。程序包含以下4个功能：<br>（1）登录功能，用户输入正确的账号密码进行成功；<br>（2）注册功能，输入用户名和密码进行注册；<br>（3）查看功能，查看所有的用户名与密码；<br>（4）退出功能，退出系统。<br>用户可以输入对应的编号进行相应的功能操作。例如，输入2进入注册功能，输入用户名和密码进行注册。</li>
<li>运行结果</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析”登录注册”程序的实现思路。</li>
<li>根据思路独立完成”登录注册”的源代码编写、编译及运行。</li>
<li>掌握根据”登录注册”程序功能的不同，将功能封装到不同的方法中。</li>
<li>能够使用数组解决注册功能的添加问题</li>
<li>能够使用数组实现查看功能</li>
<li>掌握方法和数组的使用</li>
</ul>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><ol>
<li>在存储账号密码时，如果对每一个用户的账号密码都定义两个变量存储，则会出现过多孤立的变量，很难一次性将全部数据持有。此时，可以使用数组解决多个数据的存储问题。创建一个可以存储多个用户账号数组和一个可以存储多个用户密码的数组。需要注意的是，需要在两个数组前加上static属性，这样做是为了让本类都可以使用到这两个数组。</li>
<li>从运行结果可以看出，我们首先打印出了可以操作的列表以及序列号，我们可以定print方法来实现打印。</li>
<li>从运行结果可以看出，查看功能是将已有的用户信息打印，我们需要使用for循环打印我们已有的账号数组和密码数组。</li>
<li>注册功能是在定义好的账号数组和密码数组添加新的数据，这里我们会需要的增加账号和密码数组的长度。增加原有数组长度时，需要先定义两组新的数组，在原有数组的长度上增加长度，并将原有的数组复制进新的数组。<br>将原有的数组复制进新的数组时需要使用到System的arraycopy方法，arraycopy方法的用法如下所示。<br>  <code>arrayCopy(arr1, 2, arr2, 5, 10);</code><br>此句代码是将arr1数组里从索引为2的元素开始, 复制到数组arr2里的索引为5的位置, 复制的元素个数为10个。</li>
<li>登录功能可以使用for循环判断用户输入的字符与数组中的字符是否匹配，以此来判断是否登录成功。</li>
<li>退出功能可以使用System的exit方法。</li>
<li>“登录注册”程序明确的分为4个功能，如果将多个独立的功能代码写在一起，代码将会相对冗长，可以使用针对不同功能将其封装到不同的方法中，将完整独立的功能分离出来，然后只需要在程序的main()方法中调用方法即可。</li>
</ol>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><p>登录注册程序的实现代码:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0206</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> arr1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> arr2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"admin"</span><span class="token punctuation">;</span>
        arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请选择功能："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                    <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                    <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
                    <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的值错误。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 登录功能，键盘输入用户名与密码
     * 使用for循环加if判断验证输入的用户名与密码是否正确
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入用户名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> name <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Scanner</span> sc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入密码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> password <span class="token operator">=</span> sc2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登陆失败，请重新输入！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 注册功能，键盘输入用户名与密码
     * 定义一个boolean变量，使用for循序判断用户是否存在
     * 如果用户不存在，在数组中插入注册的账号密码时
     * 可能会有数组长度不够的情况，所以需要使用到
     * 增加数组的长度，这里调用增加数组长度的方法add()。
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入用户名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入密码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> password <span class="token operator">=</span> sc2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的用户名已存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                arr1<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> name<span class="token punctuation">;</span>
                arr2<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> password<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"注册成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                arr1<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> name<span class="token punctuation">;</span>
                arr2<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> password<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"注册成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 查看功能
     * 使用for循环打印两个数组的长度
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名："</span> <span class="token operator">+</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">",密码："</span> <span class="token operator">+</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 增加数组长度
     * 先定义两个新的数组并在原有的数组长度上加3
     * 使用System的arraycopy方法复制原有的数组到新的数组
     * 最后将新的数组赋值给原有的arr1与aar2
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">String</span> newarray1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>arr1<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> newarray2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>arr1<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>newarray1<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>arr1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>newarray2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        arr1 <span class="token operator">=</span> newarray1<span class="token punctuation">;</span>
        arr2 <span class="token operator">=</span> newarray2<span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 可操作功能的显示
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------注册管理系统 --------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" 1.登录功能 (login) "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" 2.注册功能(register) "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" 3.查看(show) "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" 0.退出(exit) "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------注册管理系统 --------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在代码中，第6 ~ 8行代码使用static定义了全局变量arr1[]数组用于用户名存储，arr2[]数组用于密码存储，index用于数组的下标。第39 - 55行代码定义了用户登录的方法，使用for循环数组的长度，使用if判断输入的用户名与密码是否与数组中的匹配，可以得出登录成功或者失败。<br>第63 ~ 90行代码是用户注册的方法，定义一个boolean变量，使用for循序判断用户是否存在如果用户不存在，在数组中插入注册的账号密码时可能会有数组长度不够的情况，所以需要使用到增加数组的长度，这里调用增加数组长度的方法add()。<br>第95 ~ 101行代码是查看方法是实现，使用for循环打印arr1[]与arr2[]。<br>第108 ~ 116行代码是增加数组长度的方法，先定义两个新的数组并在原有的数组长度上加3使用System的arraycopy方法复制原有的数组到新的数组最后将新的数组赋值给原有的arr1与aar2。<br>第120 ~ 128行代码是对可操作功能的显示。<br>第11 ~ 32行代码是main方法，使用while循环用户操作，调用封装好的方法实现登录注册小功能。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-5】  剪刀石头布小游戏</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-5%E3%80%91-%E5%89%AA%E5%88%80%E7%9F%B3%E5%A4%B4%E5%B8%83%E5%B0%8F%E6%B8%B8%E6%88%8F.html</url>
    <content><![CDATA[<h1 id="【案例2-5】-剪刀石头布小游戏"><a href="#【案例2-5】-剪刀石头布小游戏" class="headerlink" title="【案例2-5】  剪刀石头布小游戏"></a>【案例2-5】  剪刀石头布小游戏</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li>任务描述<br>“剪刀石头布”的游戏相信大家都不陌生，本案例要求编写一个剪刀石头布游戏的程序。程序启动后会随机生成1~3的随机数，分别代表剪刀、石头和布，玩家通过键盘输入剪刀、石头和布与电脑进行5轮的游戏，赢的次数多的一方为赢家。若五局皆为平局，则最终结果判为平局。</li>
<li>运行结果</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析”剪刀石头布游戏”程序的实现思路。</li>
<li>根据思路独立完成” 剪刀石头布游戏”的源代码编写、编译及运行。</li>
<li>掌握在程序中使用for循环语句进行循环操作。</li>
<li>掌握在程序中使用if添加判断语句进行游戏的规则判断以及输赢判断。</li>
</ul>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><ol>
<li>从运行结果中分析可知，我们需要使用先打印头部显示的内容。在使用for循环5次Scanner类的用户输入代码以及随机数，这样我们就可以得到5个用户输入和5个随机数。<br>随机数可以使用Random类中的nextInt（int n）方法，如下代码会生成一个1-9的随机数：<br>  <code>int randomNumber=new Random().nextInt(10)</code></li>
<li>从任务描述中可知，我们生成的是1-3的随机数，可以把1代表剪刀，2代表石头，3代表布，首先使用if..else语句判断用户输入的内容，再根据随机生成的数字与玩家输入的内容做判断，可以得出一轮游戏的输赢。</li>
<li>最后在程序的开始定义两个int变量作为记录游戏输赢的值，在游戏中玩家获胜一句时a+1，在游戏平局时b+1，再使用if..else语句判断，将结果分过获胜、和局、失败三种结果。如果玩家与电脑获胜场次一致那结果为和局，如果玩家获胜场次大于电脑那么结果为获胜，反之则为失败。</li>
</ol>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0205</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Game</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"剪刀\t石头\t布"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> wincount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//玩家获胜次数</span>
        <span class="token keyword">int</span> drawcount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//玩家平局次数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> <span class="token number">5</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//生成（1-3）之间的随机数，1为剪刀，2为石头，3为布</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"局,你出："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> enter <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>enter<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">case</span> <span class="token string">"剪刀"</span><span class="token operator">:</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"平局"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        drawcount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你赢了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        wincount <span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"石头"</span><span class="token operator">:</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你赢了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        wincount <span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"平局"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        drawcount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"布"</span><span class="token operator">:</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你赢了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        wincount <span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"平局"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        drawcount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token punctuation">&#125;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的无法识别"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你一共赢了"</span> <span class="token operator">+</span> wincount <span class="token operator">+</span> <span class="token string">"局，平局"</span> <span class="token operator">+</span> drawcount <span class="token operator">+</span> <span class="token string">"局"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第8~9行代码定义了两个int变量用于记录每局游戏的赢或平局。第13 ~ 17行代码使用for循序5次，打印了第几局游戏、循环了5次用户输入以及5个1-3的随机数。第18 ~ 60行代码使用if…else语句判断，将用户输入的字符分为4类：<br>1.	如果用户输入了剪刀，电脑随机出2，用户就可以获胜；电脑随机出1，为平局；电脑随机出3，用户此局为输；<br>2.	用户输入石头，电脑随机出1，用户就可以获胜；<br>3.	用户如果输入布，电脑随机出2，用户就可以获胜；<br>4.	用户如果输入其他字符，则为判断无效，程序将停止；<br>第61 ~ 70行代码使用if..else语句判断游戏最终的输赢。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-2】  小明都可以买什么</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-2%E3%80%91-%E5%B0%8F%E6%98%8E%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%B9%B0%E4%BB%80%E4%B9%88.html</url>
    <content><![CDATA[<h1 id="【案例2-2】-小明都可以买什么"><a href="#【案例2-2】-小明都可以买什么" class="headerlink" title="【案例2-2】  小明都可以买什么"></a>【案例2-2】  小明都可以买什么</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li>任务描述<br>编写一个智能购物计算小程序，在一家商店有书本、铅笔、橡皮、可乐、零食五种商品，商品价格如下表所示。<br>商品名称	价格<br>书本	12元<br>铅笔	1元<br>橡皮	2元<br>可乐	3元<br>零食	5元<br>假如你带了20元，且必须购买一本书，剩余的钱还可以购买哪种商品，可以购买几件，购买完后又能剩余多少钱？</li>
<li>运行结果</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析”智能购物”程序的实现思路</li>
<li>根据思路独立完成”智能购物”的源代码编写、编译及运行。</li>
<li>掌握在程序中使用switch条件语句进行运算操作。</li>
</ul>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><p>(1)	 从任务描述中可知，要实现此功能，我们需要先定义5种商品，定义五个int值作为这五种商品的价格。<br>(2)	从运行结果可知，我们需要先打印各个商品的价格以及带了多少钱，并选择需要购买商品的序列号。<br>(3)	选择到序列号后，我们需要使用switch条件语句进行判断用户要购买那件商品，并在switch条件语句中，计算可以购买多少其他商品和剩余多少钱。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0202</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Shopping</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
         <span class="token comment">/*
 6 			   * 假如你有20元，至少需要购买1本书，剩余的钱还可以购买那些东西。
 7 			   */</span>
        <span class="token keyword">int</span> pencil <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">//铅笔价格</span>
        <span class="token keyword">int</span> rubber <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>   <span class="token comment">//橡皮价格</span>
        <span class="token keyword">int</span> cola <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>     <span class="token comment">//可乐价格</span>
        <span class="token keyword">int</span> book <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>    <span class="token comment">//书本价格</span>
        <span class="token keyword">int</span> snacks <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">//零食价格</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"书本的价格为"</span> <span class="token operator">+</span> book <span class="token operator">+</span> <span class="token string">"元，你总共有20元。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1.铅笔的价格为"</span> <span class="token operator">+</span> pencil <span class="token operator">+</span> <span class="token string">"元。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2.橡皮的价格为"</span> <span class="token operator">+</span> rubber <span class="token operator">+</span> <span class="token string">"元。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3.可乐的价格为"</span> <span class="token operator">+</span> cola <span class="token operator">+</span> <span class="token string">"元。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"4.零食的价格为"</span> <span class="token operator">+</span> snacks <span class="token operator">+</span> <span class="token string">"元。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你需要哪一个货物，请输入序列号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> id <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                <span class="token keyword">int</span> pencilmoney <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">-</span> book<span class="token punctuation">;</span>
                <span class="token keyword">int</span> pencilsum <span class="token operator">=</span> pencilmoney <span class="token operator">/</span> pencil<span class="token punctuation">;</span>
                <span class="token keyword">int</span> pencilsurplus <span class="token operator">=</span> pencilmoney <span class="token operator">%</span> pencil<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你好可以买"</span> <span class="token operator">+</span> pencilsum <span class="token operator">+</span> <span class="token string">"个铅笔。还剩"</span> <span class="token operator">+</span> pencilsurplus <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                <span class="token keyword">int</span> rubbermoney <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">-</span> book<span class="token punctuation">;</span>
                <span class="token keyword">int</span> rubbersum <span class="token operator">=</span> rubbermoney <span class="token operator">/</span> rubber<span class="token punctuation">;</span>
                <span class="token keyword">int</span> rubbersurplus <span class="token operator">=</span> rubbermoney <span class="token operator">%</span> rubber<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你好可以买"</span> <span class="token operator">+</span> rubbersum <span class="token operator">+</span> <span class="token string">"个铅笔。还剩"</span> <span class="token operator">+</span> rubbersurplus <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
                <span class="token keyword">int</span> colamoney <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">-</span> book<span class="token punctuation">;</span>
                <span class="token keyword">int</span> colasum <span class="token operator">=</span> colamoney <span class="token operator">/</span> cola<span class="token punctuation">;</span>
                <span class="token keyword">int</span> colasurplus <span class="token operator">=</span> colamoney <span class="token operator">%</span> cola<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你好可以买"</span> <span class="token operator">+</span> colasum <span class="token operator">+</span> <span class="token string">"个可乐。还剩"</span> <span class="token operator">+</span> colasurplus <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
                <span class="token keyword">int</span> snacksmoney <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">-</span> snacks<span class="token punctuation">;</span>
                <span class="token keyword">int</span> snacksum <span class="token operator">=</span> snacksmoney <span class="token operator">/</span> snacks<span class="token punctuation">;</span>
                <span class="token keyword">int</span> snacksurplus <span class="token operator">=</span> snacksmoney <span class="token operator">%</span> snacks<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你好可以买"</span> <span class="token operator">+</span> snacksum <span class="token operator">+</span> <span class="token string">"个零食。还剩"</span> <span class="token operator">+</span> snacksurplus <span class="token operator">+</span> <span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第8 ~ 12行代码定义了5个商品的价格，第12 ~ 17行代码打印了商品的价格，第18 ~20 行代码是让用户输入需要购买的商品序号，第21 ~ 53行代码使用了switch条件选择判断用户购买的那中商品，再在switch中计算可以购买多少个以及剩余多少钱。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-4】  为新员工分配部门</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-4%E3%80%91-%E4%B8%BA%E6%96%B0%E5%91%98%E5%B7%A5%E5%88%86%E9%85%8D%E9%83%A8%E9%97%A8.html</url>
    <content><![CDATA[<h1 id="【案例2-4】-为新员工分配部门"><a href="#【案例2-4】-为新员工分配部门" class="headerlink" title="【案例2-4】  为新员工分配部门"></a>【案例2-4】  为新员工分配部门</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li>任务描述<br>某公司现有java程序开发部门、C#程序开发部门、asp.net程序测试部门、前端程序开发部门四个部门。编写一个程序实现新入职的员工的部门分配，要求根据用户输入的员工姓名和应聘语言确定员工应该分配到哪个部门。若公司没有与输入的语言匹配的部门，则进行相关提示。</li>
<li>运行结果</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析”新员工分配部门”程序的实现思路。</li>
<li>根据思路独立完成” 新员工分配部门”的源代码编写、编译及运行。</li>
<li>掌握在程序中使用switch条件语句进行运算操作。</li>
</ul>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><ol>
<li>从任务描述中可知，我们需要使用Scanner类让用户输入新员工的姓名以及应聘的语言，并使用两个String数据接收用户输入的内容。</li>
<li>从任务描述中可知，我们可以使用switch条件语句根据语言判断所被分配的部门。</li>
<li>最后在switch条件语句中打印新员工姓名加所处的部门。</li>
</ol>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0204</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Department</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入新员工的名字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入新员工应聘的语言："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> language <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据输入的语言来判断进入那个部门。</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>language<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">case</span> <span class="token string">"java"</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">"Java"</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">"c#"</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">"C#"</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"应被分配到"</span> <span class="token operator">+</span> language <span class="token operator">+</span> <span class="token string">"程序开发部门部门。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"asp.net"</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"应被分配到"</span> <span class="token operator">+</span> language <span class="token operator">+</span> <span class="token string">"程序测试部门。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"前端"</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">"html"</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">"Html"</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"应被分配到前端程序开发部门。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"抱歉，"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"本公司不需要"</span><span class="token operator">+</span>language<span class="token operator">+</span><span class="token string">"语言的人。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第8 ~ 12行代码是让用户输入新员工的姓名和语言并使用String类型的数据接收，第13 ~ 32行代码使用switch条件语句根据用户输入的语言判断新员工应该被分配到那个部门。<br>需要注意的是，在switch语法中每个case关键字可以作为一个条件分支，但是对于多个条件采取相同业主务处理的情况，可以把多个case分支关联在一起，省略它们之间的break语句，而在最后一个相同的case分支中实现业务处理并执行break语句，就像本实例中应用的那样。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例2-7】  抽取幸运观众</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B2-7%E3%80%91-%E6%8A%BD%E5%8F%96%E5%B9%B8%E8%BF%90%E8%A7%82%E4%BC%97.html</url>
    <content><![CDATA[<h1 id="【案例2-7】-抽取幸运观众"><a href="#【案例2-7】-抽取幸运观众" class="headerlink" title="【案例2-7】  抽取幸运观众"></a>【案例2-7】  抽取幸运观众</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>任务描述
</code></pre>
在一些节目活动中，经常会有抽取幸运观众环节。本案例要求编写程序实现幸运观众的抽取，在指定人群中随机抽取一名幸运观众。<br>案例功能要求如下：<br>（1）	从键盘输入3名观众。<br>（2）	存储观众姓名。<br>（3）	总览观众姓名。<br>（4）	随机选取一名观众，并打印出该观众姓名。<ol start="2">
<li><pre><code>运行结果
</code></pre>
</li>
</ol>
</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析”抽取幸运观众”程序的实现思路。</li>
<li>根据思路独立完成” 抽取幸运观众”的源代码编写、编译及运行。</li>
<li>能够根据”抽取幸运观众”程序功能的不同，将功能封装到不同的方法中。</li>
<li>能够使用数组解决多个观众姓名的存储问题。</li>
<li>掌握方法和数组的使用。</li>
</ul>
<h2 id="【案例思路】"><a href="#【案例思路】" class="headerlink" title="【案例思路】"></a>【案例思路】</h2><p>(1)	在存储观众姓名时，如果对每个观众都定义一个变量进行姓名存储，则会出现过多鼓励的变量，很难一次性将全部数据持有。此时，可以使用数组解决多个数据的存储问题。创建一个可以存储多个观众姓名的数组，这里我们设置数组的长度为3。<br>(2)	键盘输入观众姓名。将输入的姓名依次赋值给数组各元素，此时便存储了所有观众姓名。键盘输入需要使用Scanner类，以下代码能够从键盘输入中读取一个字符串。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Scanner</span> sc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>(3)	对数组进行遍历，打印出数组每个元素的值，即实现了对每个观众姓名的总览。<br>(4)	根据数组长度，获取随机索引，这里我们的数组长度为3，所以获取的随机索引只能在0-2之间，通过随机索引获取数组中的姓名，该姓名也就是随机的姓名。获取随机索引可以使用Random类中的nextInt(int n）方法。<br>(5)	“抽取幸运观众”明确第分为了3个功能，如果将多个独立功能的代码写在一起，代码相对冗长，可以针对不同的功能将其封装到不同的方法中，将完整独立的功能分离出来，然后只需要在程序的main()方法中调用这3个方法即可。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chap0207</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Audience</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//抽取幸运观众</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----抽取幸运观众-----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建一个长度为3的数组存储观众姓名</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> audience <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//存储观众姓名</span>
        <span class="token function">addAudience</span><span class="token punctuation">(</span>audience<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//总览观众姓名</span>
        <span class="token function">printAudience</span><span class="token punctuation">(</span>audience<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//抽取幸运观众</span>
        <span class="token function">randomAudience</span><span class="token punctuation">(</span>audience<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取幸运观众的姓名</span>
        <span class="token class-name">String</span> randomName<span class="token operator">=</span><span class="token function">randomAudience</span><span class="token punctuation">(</span>audience<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"随机抽取的幸运观众是："</span><span class="token operator">+</span>randomName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 存储姓名
     * 创建一个存储多个姓名的容器（数组）
     * 键盘输入每个同学的姓名，存储到容器中（数组）
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addAudience</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> audience<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> audience<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个同学的姓名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            audience<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"观众姓名输入完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 总览全部姓名
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printAudience</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> audience<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> audience<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个观众姓名:"</span> <span class="token operator">+</span> audience<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/*
     * 随机点名
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">randomAudience</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> audience<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//根据数组的长度，获取睡觉索引</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>audience<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//通过随机索引从数组中获取姓名</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> audience<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//返回随机到的姓名</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例3-1】基于控制台的购书系统</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B3-1%E3%80%91%E5%9F%BA%E4%BA%8E%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E8%B4%AD%E4%B9%A6%E7%B3%BB%E7%BB%9F.html</url>
    <content><![CDATA[<h1 id="【案例3-1】基于控制台的购书系统"><a href="#【案例3-1】基于控制台的购书系统" class="headerlink" title="【案例3-1】基于控制台的购书系统"></a>【案例3-1】基于控制台的购书系统</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>案例描述
</code></pre>
</li>
</ol>
<ul>
<li>伴随互联网的蓬勃发展，网络购书系统作为电子商务的一种形式，正以其高效、低成本的优势逐步成为新兴的经营模式，人们已经不再满足互联网的用途仅仅局限于信息的浏览和发布，更渴望着能够充分享受互联网所带来的更多便利。网络购书系统正适应了当今社会快节奏地生活，使顾客足不出户便可以方便快捷轻松地选购自己喜欢的图书。</li>
<li>本任务要求，使用所学知识编写一个基于控制台的购书系统，实现购书功能。输出所有图书的信息：包括每本书的编号、书名、单价、库存。<br>顾客购买书时，根据提示输入图书编号来选购需要的书，并根据提示输入购买书的的数量。</li>
<li>购买完毕后输出顾客的订单信息，包括：订单号、订单明细、订单总额。</li>
</ul>
<ol start="2">
<li><pre><code>运行结果
</code></pre>
<img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220728224449.png" alt="运行结果"></li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析“基于控制台的购书系统”程序任务实现的逻辑思路。</li>
<li>能独立完成“基于控制台的购书系统”程序的源代码编写、编译及运行。</li>
<li>理解和掌握面向对象的设计程序。</li>
<li>会用类图进行面向对象设计。</li>
<li>掌握封装的实现及好处。</li>
<li>包和访问控制修饰符的使用。</li>
</ul>
<h2 id="【案例分析】"><a href="#【案例分析】" class="headerlink" title="【案例分析】"></a>【案例分析】</h2><p>一、通过任务描述可知，该系统中必须包括3个实体类，类名及属性设置如下：<br>1.	图书类（Book）：<br>    * 图书编号（id）<br>    * 图书名称（name）<br>    * 图书单价（price）<br>    * 库存数量（storage）<br>2.	订单项类（OrderItem）：<br>    * 图书（book）<br>    * 购买数量（num）<br>3.	订单类（Order）：<br>    * 订单号（orderID）<br>    * 订单总额（total）<br>    * 订单项列表（items）</p>
<p>二、由于购买图书时，需要选择图书的数量，所以需要在订单项类里定义获取图书对象以及图书数量的方法。<br>三、由于需要指定订单项以及获取订单的订单列表、订单号、订单总额等信息，所以需要有订单列表、订单号、订单总额指定订单项等方法。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><ol>
<li><p>定义图书类Book，其代码如下所示。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0301</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Book</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment">//编号</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token comment">//书名</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span><span class="token comment">//价格</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> storage<span class="token punctuation">;</span><span class="token comment">//库存</span>


    <span class="token comment">//有参构造</span>
    <span class="token keyword">public</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">,</span> <span class="token keyword">int</span> storage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> storage<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> price<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> storage<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，声明了图书标号id、书名name、价格price、库存storage,并提供了其getter和setter方法。</p>
</li>
<li><p>定义订单项类OrderItem，其代码如下所示。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0301</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderItem</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">private</span> <span class="token class-name">Book</span> book<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> num<span class="token punctuation">;</span>


    <span class="token comment">//有参构造</span>
    <span class="token keyword">public</span> <span class="token class-name">OrderItem</span><span class="token punctuation">(</span><span class="token class-name">Book</span> book<span class="token punctuation">,</span> <span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>book <span class="token operator">=</span> book<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">getBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> book<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，声明了图书对象Book,购买数量num，并提供了其getter和setter方法。</p>
</li>
<li><p>定义订单类Order，其代码如下所示。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0301</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> orderId<span class="token punctuation">;</span><span class="token comment">//订单号</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderItem</span> items<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//订单列表</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> total<span class="token punctuation">;</span><span class="token comment">//订单总额</span>

    <span class="token comment">//有参构造</span>
    <span class="token keyword">public</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>orderId <span class="token operator">=</span> orderId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderItem</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> orderId<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">OrderItem</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> items<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">calTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> total<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">//指定一个订单项</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setItems</span><span class="token punctuation">(</span><span class="token class-name">OrderItem</span> items<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// 计算订单总额</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">calTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">double</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            total <span class="token operator">+=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，声明了订单id、订单项数组，并声明了获取订单号方法getOrderId()、获取订单列表方法getItems()、获取订单总额方法getTotal()、指定一个订单项setItem()、计算订单总额的方法calTotal()。</p>
</li>
<li><p>代码实现</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0301</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayBooks</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Book</span> books<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//模拟从数据库中读取图书信息并输出</span>
        <span class="token function">outBooks</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 顾客购买图书</span>
        <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token function">purchase</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 输出订单信息</span>
        <span class="token function">outOrder</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// 方法：顾客购买图书</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Order</span> <span class="token function">purchase</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">[</span><span class="token punctuation">]</span> books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token string">"00001"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OrderItem</span> item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入书的编号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> id <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入书的数量："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderItem</span><span class="token punctuation">(</span>books<span class="token punctuation">[</span>id <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
            order<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请继续购买图书。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> order<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">// 方法：输出订单信息</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">outOrder</span><span class="token punctuation">(</span><span class="token class-name">Order</span> order<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\n\t图书订单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图书订单号："</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图书名称\t购买数量\t图书单价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OrderItem</span> items<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"订单总额：\t\t"</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">//方法：模拟从数据库中读取图书信息并输出</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">outBooks</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">[</span><span class="token punctuation">]</span> books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        books<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Java教程"</span><span class="token punctuation">,</span> <span class="token number">30.6</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        books<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"JSP教程"</span><span class="token punctuation">,</span> <span class="token number">42.1</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        books<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"SSH架构"</span><span class="token punctuation">,</span> <span class="token number">47.3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"\t图书列表"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"图书编号\t图书名称\t\t图书单价\t库存数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>books<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> books<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> books<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> books<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，输出了图书列表信息包括：图书编号、图书名称、图书单价、库存数量，用户根据图书列表信息，输入图书编号、购买数量等，系统根据用户输入的图书编号及购买数量计算总金额。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例3-2】银行存取款程序设计</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B3-2%E3%80%91%E9%93%B6%E8%A1%8C%E5%AD%98%E5%8F%96%E6%AC%BE%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1.html</url>
    <content><![CDATA[<h1 id="【案例3-2】银行存取款程序设计"><a href="#【案例3-2】银行存取款程序设计" class="headerlink" title="【案例3-2】银行存取款程序设计"></a>【案例3-2】银行存取款程序设计</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>案例描述
</code></pre>
</li>
</ol>
<ul>
<li>银行存取款的流程是人们非常熟悉的事情，用户可在银行对自己的资金账户进行存款、取款、查询余额等操作，极大的便利了人民群众对资金的管理。</li>
<li>本任务要求，使用所学知识编写一个银行存取款程序，实现存取款功能。编写一个帐户类实现银行帐户的概念，创建帐户类的对象ba，假设ba的账号为:123456，初始的存款余额为500元。首先向该账户存入1000元，再取出800元。</li>
</ul>
<ol start="2">
<li><pre><code>运行结果
</code></pre>
</li>
</ol>
<h2 id="【案例目标】"><a href="#【案例目标】" class="headerlink" title="【案例目标】"></a>【案例目标】</h2><ul>
<li>学会分析“银行存取款”程序任务实现的逻辑思路。</li>
<li>能够独立完成“银行存取款”程序的源代码编写、运行及编译。</li>
<li>理解Java语言是如何体现面向对象编程基本思想的。</li>
<li>掌握类的声明以及对象的创建。</li>
<li>了解类的成员变量和成员方法的特性以及类的构造方法的使用。</li>
</ul>
<h2 id="【案例分析】"><a href="#【案例分析】" class="headerlink" title="【案例分析】"></a>【案例分析】</h2><p>（1）通过任务描述可知，需要定义一个银行帐户类BankAccount实现银行帐户的概念。<br>（2）账户的属性包括账号和存款余额，所以还需要在BankAccount类中定义两个变量：“帐号” (account_number) 和“存款余额”(leftmoney)。<br>（3）对账户的操作包括存款、取款、查询余额，所以再定义四个方法：“存款”(savemoney)、“取款”(getmoney) 、“查询余额”(getleftmoney)以及构造方法(BankAccount)。<br>（4）最后，编写测试类，在main()方法中创建一个BankAccount类的对象ba，假设ba的账号为:123456，初始的存款余额为500元。首先向该账户存入1000元，再取出2000元。</p>
<h2 id="【案例实现】"><a href="#【案例实现】" class="headerlink" title="【案例实现】"></a>【案例实现】</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0302</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BankAccount</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> account_number<span class="token punctuation">;</span><span class="token comment">//账号</span>
    <span class="token keyword">double</span> leftmoney<span class="token punctuation">;</span><span class="token comment">//存款余额</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getleftmoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//查询余额</span>
        <span class="token keyword">return</span> leftmoney<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">savemoney</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">//存款</span>
        leftmoney <span class="token operator">+=</span> money<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getmoney</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//取款</span>
        leftmoney <span class="token operator">-=</span> money<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">BankAccount</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">,</span> <span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//构造方法，用来初始化变量</span>
        account_number <span class="token operator">=</span> number<span class="token punctuation">;</span>
        leftmoney <span class="token operator">=</span> money<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">BankAccount</span> ba <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BankAccount</span><span class="token punctuation">(</span><span class="token number">123456</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ba<span class="token punctuation">.</span><span class="token function">savemoney</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"存入1000元后，您的余额为："</span> <span class="token operator">+</span> ba<span class="token punctuation">.</span><span class="token function">getleftmoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ba<span class="token punctuation">.</span><span class="token function">getmoney</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"取款2000元后，您的余额为："</span> <span class="token operator">+</span> ba<span class="token punctuation">.</span><span class="token function">getleftmoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上述代码中，声明了一个int类型的account_number属性设一个double类型的leftmoney属性，并编写了其存款方法savemoney（）、取款方法getmoney（）、查询余额方法getleftmoney（）以及用来初始化变量的构造方法BankAccount（）。最后，在main()方法中进行测试：创建了一个ba对象，账号为123456，初始余额为200元，首先向该账户存入了1000元，随后又取出2000元。</p>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>分支结构</title>
    <url>//post/%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84.html</url>
    <content><![CDATA[<h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><ol>
<li>if分支，根据判定的结果（真或假）决定执行某个分支</li>
</ol>
<p>if功能强于switch<br>if适合做区间匹配</p>
<ul>
<li><p>格式1：</p>
<pre class="line-numbers language-none"><code class="language-none">if (条件表达式)&#123;
    语句体;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;需求：心跳（60-100）之间是正常的，否则系统进一步检查
   &#x2F;&#x2F;格式1
   Scanner sc &#x3D; new Scanner(System.in);
   System.out.println(&quot;请输入您的年龄：&quot;);
   int heartBate &#x3D; sc.nextInt();
   if (heartBate &lt; 100 || heartBate &gt; 60) &#123;
       System.out.println(&quot;心跳正常&quot;);
   &#125;
   System.out.println(&quot;检查结束&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>格式2</p>
<pre class="line-numbers language-none"><code class="language-none">if (条件表达式)&#123;
    语句体1;
&#125; else &#123;
    语句体2;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>格式3</p>
<pre class="line-numbers language-none"><code class="language-none">if(条件表达式1)&#123;
    语句体1;
&#125; else if(条件表达式2)&#123;
    语句体2;
&#125; else if (条件表达式2)&#123;
    语句体2;
&#125; 
...
else &#123;
    语句体n+1;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<ol start="2">
<li>switch分支</li>
</ol>
<ul>
<li>适合做匹配的分支选择，结构清晰，格式良好。</li>
</ul>
<p>switch适合做值匹配</p>
<pre class="line-numbers language-none"><code class="language-none">switch(表达式)&#123;
    case 值1 :
       &#x2F;&#x2F;语句
       break; &#x2F;&#x2F;可选
    case 值2 :
       &#x2F;&#x2F;语句
       break; &#x2F;&#x2F;可选
    &#x2F;&#x2F;你可以有任意数量的case语句
    case 值n-1 ：
        break;
    default : &#x2F;&#x2F;可选
       &#x2F;&#x2F;执行第n条语句
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-none"><code class="language-none">package com.itheima.branch;

import java.util.Scanner;

public class SwitchDemo2 &#123;
    public static void main(String[] args) &#123;
        Scanner sc &#x3D; new Scanner(System.in);
        System.out.println(&quot;请输入您的等级：&quot;);
        char grade &#x3D; sc.next().charAt(0);&#x2F;&#x2F;Scanner键盘输入如何赋值给char类型变量
        switch(grade)
        &#123;
            case &#39;A&#39;:
                System.out.println(&quot;优秀&quot;);
                break;
            case &#39;B&#39; :
            case &#39;C&#39; :
                System.out.println(&quot;良好&quot;);
                break;
            case &#39;D&#39; :
                System.out.println(&quot;及格&quot;);
                break;
            case &#39;F&#39; :
                System.out.println(&quot;你需要再努力努力&quot;);
                break;
            default :
                System.out.println(&quot;未知等级&quot;);
        &#125;
        System.out.println(&quot;你的等级是 &quot; + grade);
    &#125;

    private static class string &#123;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>注意事项：</li>
<li><ul>
<li>表达式类型只能是 byte、short、int、char，JDK5开始支持枚举，JDK7开始支持String、不支持double、float、long。</li>
</ul>
</li>
<li><ul>
<li>case给出的值不允许重复，且只能是字面量，不能是变量。</li>
</ul>
</li>
<li><ul>
<li>不能忘记写break，会发生穿透。</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>【案例3-3】多功能手机</title>
    <url>//post/%E3%80%90%E6%A1%88%E4%BE%8B3-3%E3%80%91%E5%A4%9A%E5%8A%9F%E8%83%BD%E6%89%8B%E6%9C%BA.html</url>
    <content><![CDATA[<h1 id="【案例3-3】多功能手机"><a href="#【案例3-3】多功能手机" class="headerlink" title="【案例3-3】多功能手机"></a>【案例3-3】多功能手机</h1><h2 id="【案例介绍】"><a href="#【案例介绍】" class="headerlink" title="【案例介绍】"></a>【案例介绍】</h2><ol>
<li><pre><code>案例描述
</code></pre>
<p>随着科技的发展，手机的使用已经普及到每个家庭甚至个人，手机的属性越来越强大，功能也越来越多，因此人们在生活中越来越依赖于手机。<br>任务要求，使用所学知识编写一个手机属性及功能分析程序设计，测试各个手机的属性及功能。使用手机时，输出当前手机的各个属性参数以及正在使用的功能。</p>
</li>
<li><pre><code>运行结果
</code></pre>
</li>
</ol>
<h2 id="【任务目标】"><a href="#【任务目标】" class="headerlink" title="【任务目标】"></a>【任务目标】</h2><ul>
<li>学会分析“手机属性及功能分析” 程序任务实现的逻辑思路。</li>
<li>能够独立完成“手机属性及功能分析”程序的源代码编写、编译及运行。</li>
<li>理解和掌握面向对象的设计过程。</li>
<li>掌握类的结构和定义过程。</li>
<li>掌握构造方法及其重载。</li>
<li>掌握对象的创建和使用。</li>
</ul>
<h2 id="【实现思路】"><a href="#【实现思路】" class="headerlink" title="【实现思路】"></a>【实现思路】</h2><ol>
<li>通过任务描述可知，需要定义一个手机类Phone实现手机的概念。</li>
<li>手机具有属性：品牌（brand）、型号（type）、价格（price）、操作系统（os）和内存（memory）。因此，需要在手机类中定义品牌（brand）、型号（type）、价格（price）、操作系统（os）和内存（memory）的变量。</li>
<li>手机具有功能：查看手机信息（about（））、打电话（call（String no））、玩游戏（playGame()）、下载音乐（downloadMusic()）、播放音乐（playMusic()）。所以，可以定义对应的方法about（）、call（）、playGame()、downloadMusic()、playMusic()。</li>
</ol>
<h2 id="【实现代码】"><a href="#【实现代码】" class="headerlink" title="【实现代码】"></a>【实现代码】</h2><ol>
<li>Phone.java<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0303</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//手机具有属性：品牌（brand）、型号（type）、价格（price）、操作系统（os）和内存（memorySize）。</span>
    <span class="token class-name">String</span> brand<span class="token punctuation">;</span>
    <span class="token class-name">String</span> type<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>
    <span class="token class-name">String</span> os<span class="token punctuation">;</span>
    <span class="token keyword">int</span> memorySize<span class="token punctuation">;</span>

    <span class="token comment">//无参构造</span>
    <span class="token keyword">public</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//有参构造</span>
    <span class="token keyword">public</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token class-name">String</span> brand<span class="token punctuation">,</span> <span class="token class-name">String</span> type<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">,</span> <span class="token class-name">String</span> os<span class="token punctuation">,</span> <span class="token keyword">int</span> memorySize<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>os <span class="token operator">=</span> os<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>memorySize <span class="token operator">=</span> memorySize<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/**
     * 手机具有功能：查看手机信息（about（））
     * 打电话（call（String no））
     * 玩游戏（playGame()）
     * 下载音乐（downloadMusic()）
     * 播放音乐（playMusic()）
     */</span>

    <span class="token comment">//查看手机信息（about（））</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">about</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌："</span> <span class="token operator">+</span> brand <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> <span class="token string">"型号："</span> <span class="token operator">+</span> type <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> <span class="token string">"操作系统："</span> <span class="token operator">+</span> os <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> <span class="token string">"价格："</span> <span class="token operator">+</span> price <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> <span class="token string">"内存： "</span> <span class="token operator">+</span> memorySize <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
    <span class="token comment">//打电话（call（String no））</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用自动拨号功能："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> phoneNo <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                phoneNo <span class="token operator">=</span> <span class="token string">"爸爸的号。"</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                phoneNo <span class="token operator">=</span> <span class="token string">"妈妈的号。"</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
                phoneNo <span class="token operator">=</span> <span class="token string">"爷爷的号。"</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
                phoneNo <span class="token operator">=</span> <span class="token string">"奶奶的号。"</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>phoneNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//玩游戏（playGame()）</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩扫雷游戏。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//下载音乐（downloadMusic()）</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始下载。。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下载完成。。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//播放音乐（playMusic()）</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token class-name">String</span> song<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"播放歌曲："</span> <span class="token operator">+</span> song<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
上述代码中，定义了手机的品牌brand、型号type、价格price、操作系统os、内存memorySize等属性，并提供了手机类的无参和参构造，以及打电话call()、打游戏playGame()、下载音乐downloadMusic()、播放音乐playMusic()等方法。</li>
<li>PhoneTest.java<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">chapter0303</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneTest</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// 通过无参构造创建手机对象一</span>
        <span class="token class-name">Phone</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>brand <span class="token operator">=</span> <span class="token string">"苹果"</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"iphoneX"</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>os <span class="token operator">=</span> <span class="token string">"ios"</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">8888</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>memorySize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token comment">// 测试c的各项功能</span>
        c<span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token string">"我的中国心"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*********************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 通过无参构造创建手机对象一</span>
        <span class="token class-name">Phone</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span>brand <span class="token operator">=</span> <span class="token string">"华为"</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"华为荣耀20"</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span>os <span class="token operator">=</span> <span class="token string">"Android"</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">6666</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span>memorySize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token comment">// 测试c1的各项功能</span>
        c1<span class="token punctuation">.</span><span class="token function">about</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span><span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token string">"北京欢迎你"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
上述代码中，创建了两个手机对象，并输出了这两个手机对象的属性及功能。</li>
<li>实验结果<pre class="line-numbers language-java" data-language="java"><code class="language-java">品牌：苹果
型号：iphoneX
操作系统：ios
价格：<span class="token number">8888.0</span>
内存： <span class="token number">16</span>

使用自动拨号功能：
爷爷的号。
玩扫雷游戏。
播放歌曲：我的中国心
<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
品牌：华为
型号：华为荣耀<span class="token number">20</span>
操作系统：<span class="token class-name">Android</span>
价格：<span class="token number">6666.0</span>
内存： <span class="token number">16</span>

使用自动拨号功能：
奶奶的号。
玩扫雷游戏。
播放歌曲：北京欢迎你<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>基本数据类型</title>
    <url>//post/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">数据类型</th>
<th align="center">关键字</th>
<th align="center">取值范围</th>
<th align="center">内存占用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">整数</td>
<td align="center">int</td>
<td align="center">-2的32次方~2的32次方-1</td>
<td align="center">4</td>
</tr>
<tr>
<td align="left">浮点数</td>
<td align="center">double</td>
<td align="center">4.9000000e-324 到3.402823+38</td>
<td align="center">8</td>
</tr>
<tr>
<td align="left">字符</td>
<td align="center">char</td>
<td align="center">0~65535 也就是2的16次方-1</td>
<td align="center">2</td>
</tr>
<tr>
<td align="left">布尔</td>
<td align="center">boolean</td>
<td align="center">true flase</td>
<td align="center">1</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>数组的内存图</title>
    <url>//post/%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE.html</url>
    <content><![CDATA[<h1 id="数组的内存图"><a href="#数组的内存图" class="headerlink" title="数组的内存图"></a>数组的内存图</h1><h2 id="Java内存分配介绍"><a href="#Java内存分配介绍" class="headerlink" title="Java内存分配介绍"></a>Java内存分配介绍</h2><ul>
<li>栈：main方法在栈中运行，主要存放局部变量。</li>
<li>堆：存放new出来的数组，对象等。</li>
<li>方法区：存放编译之后的class文件<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog%E6%96%B9%E6%B3%95%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE%E8%A7%A3.png" alt="方法的内存图解"></li>
</ul>
<h2 id="两个数组变量指向同一个数组对象"><a href="#两个数组变量指向同一个数组对象" class="headerlink" title="两个数组变量指向同一个数组对象"></a>两个数组变量指向同一个数组对象</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">memory</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//理解两个数组变量指向同一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

        <span class="token comment">//把数组arr1变量赋值给int类型的数组变量arr2；</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//arr2地址与arr1地址相同</span>

        arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//改变数组arr2.也改变了数组arr1；</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="数组使用常见问题"><a href="#数组使用常见问题" class="headerlink" title="数组使用常见问题"></a>数组使用常见问题</h2><ul>
<li>问题1：如果访问的元素位置超过最大索引，执行时会出现ArrayindexOutOfBoundsException(数组索引越界异常)  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//System.out.println(arr[3]);//出现异常</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>问题2：如果数组变量中没有存储数组的地址，而是null，在访问数组信息时会出现NullPointereException(空指针异常)  <pre class="line-numbers language-java" data-language="java"><code class="language-java">arr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null</span>
<span class="token comment">//System.out.println(arr.length)//出现异常</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>循环结构</title>
    <url>//post/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84.html</url>
    <content><![CDATA[<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><ol>
<li>for 循环</li>
</ol>
<ul>
<li>控制一段代码反复执行很多次。<br>格式:<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span>初始化语句<span class="token punctuation">;</span>循环条件<span class="token punctuation">;</span>迭代语句<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">(</span>重复执行的代码<span class="token punctuation">)</span>；
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>示例:<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token comment">//for循环</span>
        <span class="token comment">//输出3次HelloWord</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWord"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//循环5次</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWord"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例1<br>需求：求1 ~ 5 之间的数据和，并把求和结果输出。</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：求1 ~ 5 之间的数据和，并把求和结果输出。</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//i=1 2 3 4 5</span>
            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数据和为"</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>案例2<br>需求：求1 ~ 10的奇数和，并把求和结果在控制台上输出<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：求1 ~ 10的奇数和，并把求和结果在控制台上输出</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1~10的奇数和为"</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//另一种方法</span>
        <span class="token keyword">int</span> sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            sum1<span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1~10的奇数和为"</span> <span class="token operator">+</span> sum1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
方式：使用if筛选奇数，再通过循环累加。</li>
<li>案例3<br>需求：在控制台输出所有的“水仙花数”，水仙花数必须满足2个要求：</li>
<li><ul>
<li>水仙花数是一个三位数</li>
</ul>
</li>
<li><ul>
<li>水仙花数的个位，十位，百位的数字立方和等于原数</li>
</ul>
</li>
</ul>
<p>分析：使用for循环，从100一直到999<br>    提取该数字的个位、十位、百位<br>    使用 if 判断该数字个位、十位、百位的立方和是否为水仙花数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//记录水仙花数出现的次数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> onesplace <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> tensplace <span class="token operator">=</span> i<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> hundredsplace <span class="token operator">=</span> i<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>onesplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>tensplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>hundredsplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出为一行,"\t"为空格</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"水仙花数的个数为"</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>while循环<pre class="line-numbers language-java" data-language="java"><code class="language-java">初始化语句<span class="token operator">:</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>循环语句<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">;</span>
    迭代语句<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
例子：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WhlieDemo5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<ul>
<li><p>什么时候使用for循环，什么时候使用while循环？</p>
</li>
<li><ul>
<li>功能上完全一样，for能解决的循环while也能解决，反之亦然。</li>
</ul>
</li>
<li><ul>
<li>使用规范是：知道循环几次，使用for循环；不知道循环几次，使用while循环。</li>
</ul>
</li>
<li><p>案例：珠穆朗玛峰（世界最高峰8848.86米）<br>需求：假如我有一张足够大的纸，它的厚度是0.1毫米，请问折叠多少次，可以折叠成珠穆朗玛峰的高度。<br>分析步骤：定义变量储存珠穆朗玛峰的高度和智障的高度。<br>使用while循环，循环条件是（纸张厚度小于珠穆朗玛峰）的高度，每折叠一次，纸张厚度为原来的两倍，循环外定义计数变量，每折叠一次，该变量+1.</p>
</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WhileText6</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">double</span> peakHeight <span class="token operator">=</span> <span class="token number">8848860</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> paperTickness <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>peakHeight <span class="token operator">></span> paperTickness<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            paperTickness <span class="token operator">*=</span><span class="token number">2</span><span class="token punctuation">;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要折叠"</span> <span class="token operator">+</span> count <span class="token operator">+</span><span class="token string">"次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"纸张的最终厚度为"</span> <span class="token operator">+</span> paperTickness <span class="token operator">+</span> <span class="token string">"毫米"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>do-while循环</li>
</ol>
<ul>
<li>先执行，再判断循环条件。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">;</span>
    迭代条件<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>循环条件<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
例子：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DoWhileDemo7</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//do while 循环</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="for-和-while-的区别："><a href="#for-和-while-的区别：" class="headerlink" title="for 和 while 的区别："></a>for 和 while 的区别：</h2><ul>
<li>for循环和while循环的执行流程是一样的</li>
<li>已知循环次数使用for循环，未知循环次数使用while循环。</li>
<li>for循环中，控制循环的变量只在循环中可以使用。while循环中，控制循环的变量在循环后还可以使用。</li>
</ul>
<h2 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h2><ul>
<li>一直循环下去，如果没有干预不会停止下来。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealForDemo8</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//for定义死循环</span>
<span class="token comment">//        for (;;)&#123;</span>
<span class="token comment">//           System.out.println("Hello World");</span>
<span class="token comment">//        &#125;</span>
        <span class="token comment">//while定义死循环</span>
<span class="token comment">//        //经典循环</span>
<span class="token comment">//        while (true)&#123;</span>
<span class="token comment">//            System.out.println("Hello World");</span>
<span class="token comment">//       &#125;</span>
        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例：密码验证<br>需求：系统密码是520，请用户不断的输入密码验证，验证不对输出密码错误，验证成功输出欢迎进入系统，并停止程序。</li>
</ul>
<p>分析：使用死循环，让用户不断输入数据<br>与密码比对，验证不成功密码错误。<br>验证成功输出欢迎进入系统，并使用break结束当前循环的执行。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealForDemo8</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> okPassword <span class="token operator">=</span> <span class="token number">520</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入正确的密码："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> password <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>okPassword <span class="token operator">==</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码正确，登陆成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//可以立即结束当前循环</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"密码错误，"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>

        <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><p>循环中又包含循环</p>
<ul>
<li>循环嵌套的特点<br>外部循环一次，内部循环全部执行一次。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForForDemo9</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//目标：理解嵌套循环的全部流程</span>
        <span class="token comment">//场景：5天，每天说3次Hello World</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例<br>需求：在控制台打出四行五列*矩阵<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>强制类型转换</title>
    <url>//post/%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<ol>
<li>强行将类型范围大的变量、数据赋值给类型范围小的变量</li>
<li>注意点 1. 可能出现数据丢失<br> 2.小数强制转换成整数是直接截断小数保留整数的。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//强制类型转换</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token comment">//byte b = a;会报错，大范围的数据不能直接赋值给类型范围小的类型</span>
        <span class="token comment">//正确如下</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> a<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20</span>
        <span class="token comment">//强制类型转换可能造成数据溢出丢失</span>


    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>数组的定义</title>
    <url>//post/%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89.html</url>
    <content><![CDATA[<h1 id="数组概述"><a href="#数组概述" class="headerlink" title="数组概述"></a>数组概述</h1><h2 id="数组是什么"><a href="#数组是什么" class="headerlink" title="数组是什么"></a>数组是什么</h2><ul>
<li>数组即使用来存储一批同种类型数据的内存区域（可以理解成容器）。</li>
</ul>
<p>例子</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">90</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

张三，李四，王二
<span class="token class-name">String</span> names <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王二"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h2><ul>
<li>定义数组的时候直接给数组赋值。<br>静态初始化数组的格式：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//完整格式</span>
数据类型<span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名 <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>元素<span class="token number">1</span>，元素<span class="token number">2</span>，元素<span class="token number">3.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> score <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span><span class="token number">89.9</span><span class="token punctuation">,</span><span class="token number">99.5</span><span class="token punctuation">,</span><span class="token number">59.5</span><span class="token punctuation">,</span><span class="token number">88.0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//简化写法</span>
数据类型<span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>元素<span class="token number">1</span>，元素<span class="token number">2</span>，元素<span class="token number">3.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//数据类型[] 数组名 = &#123;元素1，元素2，元素3...&#125;;</span>
        <span class="token comment">//double[] scores = new double[]&#123;99.5,88.8,75.5&#125;</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> scores <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">99.5</span><span class="token punctuation">,</span><span class="token number">88.8</span><span class="token punctuation">,</span><span class="token number">75.5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token string">"中二"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"老王"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scores<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="数组的访问"><a href="#数组的访问" class="headerlink" title="数组的访问"></a>数组的访问</h2><p><code>数组名称[索引]</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//取值</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//赋值</span>
arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>数组的长度属性：length<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;获取数组的长度（就是数组元素的个数）
System.out.println(arr.length);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//访问数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

        <span class="token comment">//取值:数组名称[索引]</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//12</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//24</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//36</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//赋值</span>
        ages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将100赋值给ages[2]</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//访问数组长度</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>数组的最大索引</li>
</ul>
<p><code>数组名.length - 1 //前提：元素个数大于0</code><br><code>System.out.println(ages[ages.length -1]);</code></p>
<h2 id="数组的注意事项"><a href="#数组的注意事项" class="headerlink" title="数组的注意事项"></a>数组的注意事项</h2><ul>
<li>“数据类型[]数组名”也可以写成”数据类型 数组[]”。</li>
<li>什么类型的数组存放什么类型的数据，否则报错。</li>
<li>数组一旦定义下来，程序执行的过程中，长度、类型就固定了。</li>
</ul>
<p>示例</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//数组的注意事项</span>
        <span class="token comment">//1."数据类型[]数组名"也可以写成"数据类型 数组[]"。</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token comment">//int ages[] = &#123;11,23,45&#125;;</span>

        <span class="token comment">//2.什么类型的数组存放什么类型的数据，否则报错。</span>
        <span class="token comment">// String[] names = &#123;"张三","李四","王二",23&#125;; 错误的</span>

        <span class="token comment">//3.数组一旦定义下来，程序执行的过程中，长度、类型就固定了。</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ages2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ages2<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//报错，长度固定是3，不能访问第四个元素。</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="数组的动态初始化"><a href="#数组的动态初始化" class="headerlink" title="数组的动态初始化"></a>数组的动态初始化</h2><ul>
<li>定义数组的时候之确定数组元素的类型和长度，之后再存入具体数据</li>
</ul>
<p>数组的动态初始化格式：</p>
<pre class="line-numbers language-none"><code class="language-none">数据类型[] 数组名 &#x3D; new 数据类型[];
int[] arr &#x3D; new int[3];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;后赋值
arr[0] &#x3D; 10;
System.out.println(arr[0]);&#x2F;&#x2F;10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//动态初始化数组的定义和使用；</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> score <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//默认值&#123;0.0，0.0，0.0&#125;</span>
        <span class="token comment">//                                      0    1   2</span>

        <span class="token comment">//赋值</span>
        score<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99.5</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>score<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>score<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span>
        names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"李四"</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>当前已经知道存入的元素值，用静态初始化。</li>
<li>当前还不知道要存入哪些数据，用动态初始化。</li>
</ul>
<h2 id="动态初始化数组的元素默认值"><a href="#动态初始化数组的元素默认值" class="headerlink" title="动态初始化数组的元素默认值"></a>动态初始化数组的元素默认值</h2><pre class="line-numbers language-none"><code class="language-none">基本类型：
byte、short、char、int、long    默认值：0
float、double、                默认值：0.0
Boolean                        默认值：false
引用类型：
类、接口、数组、String          默认值：null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//目标：动态初始化的元素默认值的规则</span>
        <span class="token comment">//1.整型数组的元素默认类型</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>

        <span class="token comment">//2.字符数组的元素默认类型</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>chars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//没有字符0，使用int强制转换</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>chars<span class="token punctuation">[</span><span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0</span>

        <span class="token comment">//3.浮点型数组</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> scores <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0.0</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0.0</span>

        <span class="token comment">//4.布尔类型的数组</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> booleans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>booleans<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>booleans<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>

        <span class="token comment">//5.引用类型的数组</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//null</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>数组的案例</title>
    <url>//post/%E6%95%B0%E7%BB%84%E7%9A%84%E6%A1%88%E4%BE%8B.html</url>
    <content><![CDATA[<h1 id="数组的案例"><a href="#数组的案例" class="headerlink" title="数组的案例"></a>数组的案例</h1><h2 id="案例：数组元素求最大值"><a href="#案例：数组元素求最大值" class="headerlink" title="案例：数组元素求最大值"></a>案例：数组元素求最大值</h2><ol>
<li>数值：15  9000  10000  20000  9500  -5</li>
<li>分析：<ul>
<li>把数据拿到程序中去，用数组装起来。<br> <code>int[] scores = &#123;5,9000,10000,20000,9500,-5&#125;;</code></li>
<li>定义一个变量记录最大值，这个变量建议默认第一个元素作为参照。<br> <code>int max = scores[0];</code></li>
<li>遍历数组的元素，如果该元素大于变量储存的元素，则替换变量存储的值为该元素。 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i  <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     
    <span class="token keyword">if</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
         <span class="token comment">//替换</span>
    max <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li>代码实现<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：求最值</span>
        <span class="token comment">//1.定义一个静态初始化数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> scores <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">,</span><span class="token number">9500</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

        <span class="token comment">//2. 定义一个变量记录最大值，这个变量建议默认第一个元素作为参照。</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">//3.遍历数组的元素，如果该元素大于变量储存的元素，则替换变量存储的值为该元素。</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i  <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//从1开始，自己不用和自己比较</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//替换</span>
                max <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">//4.输出最大值存储的变量</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"最大值是："</span> <span class="token operator">+</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结：如何实现数组求最大值<ul>
<li>把数据拿到程序中去，用数组装起来。</li>
<li>定义一个变量记录最大值，这个变量建议默认第一个元素作为参照。</li>
<li>遍历数组的元素，如果该元素大于变量储存的元素，则替换变量存储的值为该元素。</li>
</ul>
</li>
</ol>
<h2 id="案例：猜数字游戏"><a href="#案例：猜数字游戏" class="headerlink" title="案例：猜数字游戏"></a>案例：猜数字游戏</h2><ol>
<li>需求：开发一个小游戏，游戏规则如下：<br>游戏后台随机生成1 -20 之间的5个数（无所谓重复），然后让大家来猜数字：<ul>
<li>未猜中提示：“未猜中”，并继续猜测</li>
<li>猜中提示：“运气不错，猜中了”，并输出该数据第一次出现的位置，且输出全部5个数据，最终结束游戏。</li>
</ul>
</li>
<li>分析：<ul>
<li>随机生成5个1-20之间的数据存储起来 —-&gt; 使用数组</li>
<li>定义一个死循环，输入数据猜测，遍历数组，判断数据是否在数组中，如果在，进行对应提示并结束死循环；如果没有猜中，提示继续猜测知道猜中为止。</li>
</ul>
</li>
</ol>
<p>3.代码实现</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//随机生成1 -20 之间的5个数，然后让大家来猜数字</span>
        <span class="token comment">//没有猜中则继续</span>

        <span class="token comment">//1. 定义一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//2.将这5个数据导入到数组之中</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> date<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            date<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//3.使用死循环让用户进行猜测</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        OUT<span class="token operator">:</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入一个0-20之间的整数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> truesc <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//4.遍历数组中的每一个数据，看是否猜中</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> date<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>truesc <span class="token operator">==</span> date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你已经猜中这个数字！你猜中的数字索引是："</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span> OUT<span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你猜测的数据在数组中不存在，请重新猜测！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//5.输出数组的全部元素，让用户知道确实是自己猜中了某个元素</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> date<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="案例：随机排名"><a href="#案例：随机排名" class="headerlink" title="案例：随机排名"></a>案例：随机排名</h2><ol>
<li><p>需求：某公司开发部5名工作人员，要进行项目汇报演讲，现在采取随即排名进行汇报。<br>请先依次录入5名员工的工号，然后展示出一组随机的排名顺序。<br>22  33  35  13  88 ———-&gt; 13  35  88  33  22</p>
</li>
<li><p>分析：</p>
<ul>
<li>在程序中录入5名员工的工号 ——&gt; 使用数组</li>
<li>依次遍历数组中的每一个元素，随机一个索引数据，让当前元素与该索引位置处的元素进行交换。</li>
</ul>
</li>
<li><p>代码实现</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//目标：键盘录入一组工号，最终套随机输出以作为排名</span>
        <span class="token comment">//1.动态初始化一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> codes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">//2.使用循环录入数据</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> codes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//录入工号</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个工号。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//存入数组中去</span>
            codes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3.遍历数组中的每一个元素，然后随机一个索引，让该元素与随机索引进行交换</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> codes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//遍历元素值codes[i]</span>
            <span class="token comment">//随机一个索引位置</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span>codes<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
            codes<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> codes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            codes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a <span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//4.遍历数组元素，输出数组元素</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> codes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>codes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>随机交换排名其他使用场景</p>
<ul>
<li>如斗地主</li>
</ul>
</li>
</ol>
<h2 id="数组排序-冒泡排序"><a href="#数组排序-冒泡排序" class="headerlink" title="数组排序-冒泡排序"></a>数组排序-冒泡排序</h2><ol>
<li><p>冒泡排序的思想</p>
<ul>
<li>每次从数组总找出最大值放到数组的后边去。</li>
</ul>
</li>
<li><p>分析：</p>
<ul>
<li>确定总共需要做几轮：数组的长度-1.</li>
<li>每轮比较几次：<br> i（轮数）  次数  次数规律：数组的长度-i<br>1        3<br>2        2<br>3        1</li>
</ul>
</li>
<li><p>代码实现：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.定义一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token comment">//           0 1 2 3</span>

        <span class="token comment">//2.定义一个循环的轮数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//i=1  比较的次数3 j = 0 1 2</span>
            <span class="token comment">//i=2  比较的次数2 j = 0 1</span>
            <span class="token comment">//i=3  比较的次数1 j = 0</span>
        <span class="token comment">//3.定义一个循环控制每轮比较的次数占位</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">//判断j当前位置的元素值是否大于后一位置</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token comment">//交换元素顺序</span>
                    <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//数组的遍历，将其输出</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结：<br> (1). 冒泡排序的思想<br> * 从头开始比较，把较大的元素与较小的元素进行交换<br> * 每轮把当前最大的一个元素存入数组当前的末尾。<br> (2). 冒泡排序的实现步骤<br> * 定义一个外部循环控制总共需要几轮（数组的长度-1）。<br> * 定义一个内部循环，控制在每轮依次往后比较几个位置（数组长度-1）。<br> * 如果当前位置的元素&gt;后一个位置的元素，两者交换。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>方法</title>
    <url>//post/%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="方法是什么"><a href="#方法是什么" class="headerlink" title="方法是什么"></a>方法是什么</h2><ul>
<li>方法是一种语法结构，它可以把一段代码封装成一个功能，以方便重复调用。</li>
</ul>
<h2 id="使用方法的好处"><a href="#使用方法的好处" class="headerlink" title="使用方法的好处"></a>使用方法的好处</h2><ul>
<li>提高代码的复用性</li>
<li>让程序的逻辑更清晰</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token comment">/**

        目标：能说出使用方法的优点
            1.提高代码的复用性
            2.让程序的逻辑更清晰

 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//张工</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//徐工</span>
        <span class="token keyword">int</span> a1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b1 <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c1 <span class="token operator">=</span> a1 <span class="token operator">+</span> b1<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可改写为</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//张工</span>
        <span class="token keyword">int</span> c1 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//徐工</span>
        <span class="token keyword">int</span> c2 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
        <span class="token keyword">return</span> c<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="学会方法"><a href="#学会方法" class="headerlink" title="学会方法"></a>学会方法</h2><ol>
<li>怎么定义方法</li>
<li>增么调用方法</li>
<li>方法的内存图</li>
<li>方法的参数传递机制</li>
<li>方法的常见形式、技术</li>
</ol>
<h2 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h2><ol>
<li>方法定义的完整格式：<pre class="line-numbers language-java" data-language="java"><code class="language-java">修饰符 返回值类型 方法名<span class="token punctuation">(</span>形参列表<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    方法体代码<span class="token punctuation">(</span>需要执行的功能代码<span class="token punctuation">)</span>
    <span class="token keyword">return</span> 返回值<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>示例：使用方法对两个整数求和并返回<pre class="line-numbers language-java" data-language="java"><code class="language-java">   修饰符    返回值类型 方法名     形参列表
<span class="token keyword">public</span> <span class="token keyword">static</span>   <span class="token keyword">int</span>     add    <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>方法的调用格式：<ul>
<li>方法必须调用才可以跑起来，调用格式：<code>方法名(...);</code></li>
</ul>
</li>
<li>方法格式的注意点<ul>
<li>方法的修饰符：暂时都可以使用public static修饰。</li>
<li>方法申明了具体的返回值类型，内部必须使用return返回对应类型的数据。</li>
<li>形参列表可以有多个，甚至可以没有；如果有多个形参，多个形参必须用“，”隔开，且不能给初始化。</li>
</ul>
</li>
<li>方法定义的其他格式</li>
</ol>
<ul>
<li>方法定义时：返回值类型、形参列表可以按需求进行填写。</li>
</ul>
<p>无返回值类型</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//打印3行Hello World （使用方法）</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//学会方法定义的其他形式，并了解其类型</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意事项</p>
<ul>
<li>如果方法不需要返回结果，返回值类型必须申明成void（无返回值），此时方法内部不可以使用return返回数据。</li>
<li>方法如果没有参数，或者返回值类型为void可以称为无参数、无返回值的方法，依次类推。</li>
</ul>
<h2 id="方法使用的常见问题"><a href="#方法使用的常见问题" class="headerlink" title="方法使用的常见问题"></a>方法使用的常见问题</h2><ul>
<li>方法的编写顺序无所谓。</li>
<li>方法与方法之间是平级关系，不能嵌套定义。</li>
<li>方法的返回值类型为void（无返回值），方法内则不能使用return返回数据，如果方法的返回值类型写了具体类型，方法内部则必须使用return返回对应类型的数据。</li>
<li>return语句下面，不能编写代码，因为永远执行不到，属于无效的代码。</li>
<li>方法不调用就不执行，调用时必须严格匹配方法的参数情况。</li>
<li>有返回值的方法调用时可以选择定义变量接收结果，或者直接输出调用，甚至直接调用；无返回值方法的调用只能直接调用一下。</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">create</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
<span class="token comment">//* 方法的编写顺序无所谓。</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//* 方法不调用就不执行，调用时必须严格匹配方法的参数情况。</span>
<span class="token comment">//* 方法与方法之间是平级关系，不能嵌套定义。</span>
        <span class="token comment">//方法不能放到主方法里</span>
<span class="token comment">//* 有返回值的方法调用时可以选择定义变量接收结果，或者直接输出调用，甚至直接调用；无返回值方法的调用只能直接调用一下。</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sum <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
        <span class="token comment">//* return语句下面，不能编写代码，因为永远执行不到，属于无效的代码。</span>
        <span class="token comment">//System.out.println();会报错</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//* 方法的返回值类型为void（无返回值），方法内则不能使用return返回数据，如果方法的返回值类型写了具体类型，方法内部则必须使用return返回对应类型的数据。</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//return ;会报错</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>数组的遍历</title>
    <url>//post/%E6%95%B0%E7%BB%84%E7%9A%84%E9%81%8D%E5%8E%86.html</url>
    <content><![CDATA[<h1 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h1><h2 id="数组遍历介绍"><a href="#数组遍历介绍" class="headerlink" title="数组遍历介绍"></a>数组遍历介绍</h2><ul>
<li>遍历：就是一个一个数据的访问</li>
<li>为什么要遍历？搜索、数据统计等等搜需要用到遍历。<pre class="line-numbers language-none"><code class="language-none">int[] ages &#x3D; &#123;20,30,40,50&#125;;
for (int i &#x3D; 0; i &lt;&#x3D; ages.length; i++)&#123;
    Ststen.out.println(ages[i]);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">traverse</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayDemo</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//数组的遍历</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">96</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token comment">//            0  1  2  3  4</span>

        <span class="token comment">//遍历方式</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">&#125;</span>
        <span class="token comment">//数组便利快捷键：arr.fori</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//快捷键：arr[i].sout</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
如何遍历数组：使用for循环。</li>
</ul>
<h2 id="案例：数组遍历-求和"><a href="#案例：数组遍历-求和" class="headerlink" title="案例：数组遍历-求和"></a>案例：数组遍历-求和</h2><ul>
<li>需求：某部门5名员工的销售额分别是：16、26、36、6、100，请计算出他们部门的总销售额。</li>
<li>分析：<ol>
<li>把这5个数据拿到程序中去 —–&gt; 使用数组<br><code>int[] money = &#123;16,26,36,6,100&#125;;</code></li>
<li>遍历数组中的每一个数据，然后在外面定义和变量把他们累加起来<pre class="line-numbers language-none"><code class="language-none">int sum &#x3D; 0;
for(int i &#x3D; 0; i &lt; money.length; i++)&#123;
    &#x2F;&#x2F; i &#x3D; 0  1  2  3  4
    sum +&#x3D; money[i];
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
</li>
</ul>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：某部门5名员工的销售额分别是：16、26、36、6、100，请计算出他们部门的总销售额。</span>
        <span class="token comment">//1.把这数据拿到程序中去记住</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> money <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

        <span class="token comment">//3. 定义一个求和变量累加数组的元素值</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//2.遍历数组中的每一个数据</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> money<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token comment">// i = 0  1  2  3  4</span>
            <span class="token comment">// 把每个数据累加</span>
            sum <span class="token operator">+=</span> money<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//4.输出球和变量</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总销售额是："</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//184</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>如何实现批量数据的求和<ul>
<li>使用数组存储批量数据</li>
<li>遍历数组中的每一个数据，然后定义变量把他们累加起来。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>方法的内存原理</title>
    <url>//post/%E6%96%B9%E6%B3%95%E7%9A%84%E5%86%85%E5%AD%98%E5%8E%9F%E7%90%86.html</url>
    <content><![CDATA[<h1 id="方法的内存原理"><a href="#方法的内存原理" class="headerlink" title="方法的内存原理"></a>方法的内存原理</h1><h2 id="方法的调用流程-内存图解"><a href="#方法的调用流程-内存图解" class="headerlink" title="方法的调用流程 - 内存图解"></a>方法的调用流程 - 内存图解</h2><ul>
<li>方法没有被调用的时候，在方法区中的字节码文件中存放</li>
<li>方法被调用的时候，需要进入到栈内存中运行</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//理解方法的内存机制</span>
        <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吃饭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"睡觉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img data-src="/photo/%E6%96%B9%E6%B3%95%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE%E8%A7%A3.png" alt="方法的内存图解"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>方法的运行区域<ul>
<li>栈内存</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>方法案例</title>
    <url>//post/%E6%96%B9%E6%B3%95%E6%A1%88%E4%BE%8B.html</url>
    <content><![CDATA[<h1 id="方法案例"><a href="#方法案例" class="headerlink" title="方法案例"></a>方法案例</h1><h2 id="方法定义技巧说明"><a href="#方法定义技巧说明" class="headerlink" title="方法定义技巧说明"></a>方法定义技巧说明</h2><ul>
<li>修饰符：publi stati（暂时固定的）</li>
<li>方法名称：自己取名，有意义，小写模式，驼峰模式。（有意义的名字即可）</li>
<li>方法体代码：完成自己需要写的功能代码即可。（具体需求具体实现）</li>
<li>分析方法是否需要声明返回值类型；分析方法是否需要接受参数。</li>
</ul>
<h2 id="案例：计算1-n的返回"><a href="#案例：计算1-n的返回" class="headerlink" title="案例：计算1-n的返回"></a>案例：计算1-n的返回</h2><ol>
<li>需求：定义一个方法，方法中计算出1 ~ n的和并返回。</li>
<li>分析：根据格式编写方法 –&gt; 因为n不固定，故方法需要声明形参接收；要返回结果，还需申明返回值类型。</li>
<li>代码执行<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：定义一个方法，方法中计算出1 ~ n的和并返回。</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//定义一个1~n的和的方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sum <span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="案例：判断整数是奇数还是偶数"><a href="#案例：判断整数是奇数还是偶数" class="headerlink" title="案例：判断整数是奇数还是偶数"></a>案例：判断整数是奇数还是偶数</h2><ol>
<li>需求：拿一个是整数，然后调用方法，把整数交给方法，在方法中输出该数为奇数还是偶数。</li>
<li>分析：根据格式编写方法 –&gt; 因为传入数据给方法，方法需要声明形参接收。方法内部使用if语句判断，并输出对应的结论。</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//判断整数是奇数还是偶数,使用方法完成。</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个整数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">check</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//定义一个方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>number<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token string">"是偶数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token string">"是奇数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="案例：数组求最值改方法实现"><a href="#案例：数组求最值改方法实现" class="headerlink" title="案例：数组求最值改方法实现"></a>案例：数组求最值改方法实现</h2><ol>
<li>需求：把找出数组的最大值案例，改造成方法，可以支持返回任意整型数组的最大值数据。</li>
<li>分析：根据格式编写方法，发给发内部找出数组的最大值并返回。</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：把找出数组的最大值，使用方法，可以支持返回任意整型数组的最大值数据。</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> maxDate <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token function">getArrayMaxDate</span><span class="token punctuation">(</span>maxDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数组的最大值是："</span> <span class="token operator">+</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getArrayMaxDate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//遍历数组进行比较</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> max<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>方法的参数传递机制</title>
    <url>//post/%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6.html</url>
    <content><![CDATA[<h1 id="方法的参数传递机制"><a href="#方法的参数传递机制" class="headerlink" title="方法的参数传递机制"></a>方法的参数传递机制</h1><h2 id="案例：打印整型数组内容"><a href="#案例：打印整型数组内容" class="headerlink" title="案例：打印整型数组内容"></a>案例：打印整型数组内容</h2><ol>
<li>需求：设计一个方法用于输出任意整型数组的内容，要求输出成如下格式：<br>该数组内容为：[11,22,33,44,55]</li>
<li>分析：<ul>
<li>定义一个方法，要求该方法能够接收数组，并输出内容。 —&gt; 需要参数吗？返回值需要声明吗?</li>
<li>定义一个静态化初始数组，调用该方法，并传入该数组。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">param</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// 需求：设计一个方法用于输出任意整型数组的内容</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token function">getArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token function">getArray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//特殊时候，传递空值</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr3 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token function">getArray</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
               <span class="token comment">//1.if写法</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">&#125;</span>
               <span class="token comment">//</span>
               <span class="token comment">//2.三元运算符写法</span>
               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">==</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">:</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">//</span>
           <span class="token punctuation">&#125;</span>
       <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="案例：从数组中查询指定元素的索引"><a href="#案例：从数组中查询指定元素的索引" class="headerlink" title="案例：从数组中查询指定元素的索引"></a>案例：从数组中查询指定元素的索引</h2><ol>
<li>需求：设计一个方法可以接收整型数组，和要查询的元素值；最终要返回元素在该数组中的索引，如果数组中不存在该元素则返回。<br>示例： <pre class="line-numbers language-java" data-language="java"><code class="language-java">例如：<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">]</span>
输入元素：<span class="token number">44</span>，返回索引<span class="token number">3</span>
输入元素：<span class="token number">88</span>，返回<span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>分析：<ul>
<li>定义方法，接收整型数组，查询的元素值，在方法体中完成元素查询的功能。 —–&gt; 是否需要参数、返回值类型？</li>
<li>定义数组，调用该方法，并指定要搜索的元素值，得到返回的结果输出。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">param</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：设计一个方法可以接收整型数组，和要查询的元素值；最终要返回元素在该数组中的索引</span>

        <span class="token comment">//3.定义一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您查询的元素的索引是："</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//1.定义一个方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> date<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

        <span class="token comment">//2.开始找出这个数据的索引</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> date<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//查无此元素</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="案例：比较两个数组的内容是否一样"><a href="#案例：比较两个数组的内容是否一样" class="headerlink" title="案例：比较两个数组的内容是否一样"></a>案例：比较两个数组的内容是否一样</h2><ol>
<li>需求：如果两个数组的类型，元素个数，元素顺序和内容是一样的我们就认为这两个数组是一摸一样的。 <pre class="line-numbers language-java" data-language="java"><code class="language-java">例如：如下两个数组是一样的
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrs1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrs2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
 请用方法完成：能够判断任意两个整型数组是否一样，并返回true或者false。</li>
<li>分析：<ul>
<li>定义方法，接收2个整型数组 —&gt; 是否需要参数，返回值类型？</li>
<li>在方法内部完成判断的逻辑，并返回布尔结果。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">param</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：比较两个数组的内容是否一样</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//判断两端数组长度是否相等</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length <span class="token operator">==</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">//判断数组元素是否相同</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token comment">//这个返回值要在循环完之后返回</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>方法的参数传递</title>
    <url>//post/%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92.html</url>
    <content><![CDATA[<h1 id="方法的参数传递"><a href="#方法的参数传递" class="headerlink" title="方法的参数传递"></a>方法的参数传递</h1><h2 id="Java的参数传递机制：值传递"><a href="#Java的参数传递机制：值传递" class="headerlink" title="Java的参数传递机制：值传递"></a>Java的参数传递机制：值传递</h2><ul>
<li>在传递实参给方法的形参的时候，并不是传递实参变量本身，而是传递实参变量中存储的值，这就是值传递。</li>
</ul>
<p>注意：</p>
<ul>
<li>实参：如在方法内部定义的变量</li>
<li>形参：如在定义方法时，”()”中所声明的参数。</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">param</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//理解Java的基本类型的参数传递，值传递</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token function">change</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10</span>
        a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//20</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="引用类型的参数传递"><a href="#引用类型的参数传递" class="headerlink" title="引用类型的参数传递"></a>引用类型的参数传递</h2><p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">param</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//理解引用类型的参数传递机制</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrs <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token function">change</span><span class="token punctuation">(</span>arrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1"</span> <span class="token operator">+</span> arrs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//方法传递回来后，数组值改变。arr[1]=222</span>
    <span class="token punctuation">&#125;</span>
        <span class="token comment">//数组传递的是地址</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrs<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2"</span> <span class="token operator">+</span> arrs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//数组值未改变，arr[1]=20</span>
        arrs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3"</span> <span class="token operator">+</span> arrs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//数组值改变，arr[1]=222</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>基本类型和引用类型的参数在传递的时候有什么不同？<ul>
<li>都是值传递</li>
<li>基本类型的参数传输存储的数据值</li>
<li>引用类型的参数传输存储的地址值</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>案例技术Random类</title>
    <url>//post/%E6%A1%88%E4%BE%8B%E6%8A%80%E6%9C%AFRandom%E7%B1%BB.html</url>
    <content><![CDATA[<h1 id="Random随机数技术"><a href="#Random随机数技术" class="headerlink" title="Random随机数技术"></a>Random随机数技术</h1><ul>
<li>作用：用于在计算机获取随机数的技术。</li>
</ul>
<h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol>
<li>导包：告诉程序去JDK的哪个包中找随机数技术</li>
<li>写一行代码代表得到随机数对象</li>
<li>调用随机数的功能获取0 ~ 9的随机数。</li>
</ol>
<p>注意</p>
<ul>
<li>nextint(n)功能只能生成0至n-1之间的随机数，不包括n。</li>
</ul>
<p>示例：随机生成0 ~ 9之间的数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>random</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//使用random</span>
        <span class="token comment">//1. 导包</span>
        <span class="token comment">//2. 创建随机数</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3. 调用nextint()功能方法可以返回一个随机数值</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> date <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0 ~ 9不包含10的</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Random生成区间随机数的技巧：减加法"><a href="#Random生成区间随机数的技巧：减加法" class="headerlink" title="Random生成区间随机数的技巧：减加法"></a>Random生成区间随机数的技巧：减加法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 1-10 ==> -1 ==> (0-9) +1</span>
  <span class="token keyword">int</span> date <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//3 - 17 ==> -3 ==> （0 - 14） + 3</span>
  <span class="token keyword">int</span> date1 <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">3</span> <span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date1<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="案例：猜数字游戏"><a href="#案例：猜数字游戏" class="headerlink" title="案例：猜数字游戏"></a>案例：猜数字游戏</h2><ul>
<li>需求：随机生成一个1 - 100之间的数据，提示用户数据，猜大则提示过大，猜小则提示过小，知道猜中结果。</li>
</ul>
<p>分析：</p>
<ol>
<li>随机生成一个0-100的数</li>
<li>使用死循环让用户猜测，猜大则提示过大，猜小则提示过小，猜中则结束游戏。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>random</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomText2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">;</span> <span class="token comment">//随机数区间为（0-99）+1 ===> (1-100)</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你猜中的数字:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> a <span class="token operator">&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"你猜的数字过小，"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> a <span class="token operator">></span> i <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"你猜的数字过大，"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你猜的数字正确，游戏结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//结束当前死循环</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>案例</tag>
      </tags>
  </entry>
  <entry>
    <title>方法重载</title>
    <url>//post/%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD.html</url>
    <content><![CDATA[<h1 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h1><h2 id="方法重载-1"><a href="#方法重载-1" class="headerlink" title="方法重载"></a>方法重载</h2><ol>
<li><p>同一个类中，出现多个方法名称相同，但是形参列表是不同的，那么这些方法就是重载方法。</p>
</li>
<li><p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">overload</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MedthodDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//识别方法重载的形式，并理解其调用流程，最后知道使用方法重载的好处。</span>
        
        <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认发射一枚武器给米国~~~</span>
        <span class="token function">fire</span><span class="token punctuation">(</span><span class="token string">"岛国"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//发射一枚武器给岛国~~~</span>
        <span class="token function">fire</span><span class="token punctuation">(</span><span class="token string">"岛国"</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认发射1000枚武器岛国~~~</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认发射一枚武器给米国~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fire</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"发射一枚武器给"</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">"~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fire</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">,</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认发射"</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">"枚武器"</span> <span class="token operator">+</span>location <span class="token operator">+</span> <span class="token string">"~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>总结：</p>
<ul>
<li>方法重载的好处：对于相似功能的业务场景；可读性好。方法名称相同提示是同一类型的功能，通过形参不同实现差异化的选择，这是一种专业的代码设计。</li>
</ul>
</li>
</ol>
<h2 id="方法重载的识别技巧"><a href="#方法重载的识别技巧" class="headerlink" title="方法重载的识别技巧"></a>方法重载的识别技巧</h2><ul>
<li>只要是同一个类中，方法名称相同、形参列表不同，那么他们就是重载的方法，其他都不管！（如：修饰符，返回值类型都无所谓）</li>
<li>形参列表不同指：形参的个数、类型顺序不同。不关心形参的名称。</li>
</ul>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>程序流程控制</title>
    <url>//post/%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.html</url>
    <content><![CDATA[<h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><ol>
<li>Java提供了一些流程控制语句，来控制程序的执行语句。</li>
</ol>
<ul>
<li>顺序结构 程序默认结构</li>
<li>分支结构 If、switch</li>
<li>循环结构 for、while、do…while</li>
</ul>
<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><ol>
<li>if分支，根据判定的结果（真或假）决定执行某个分支</li>
</ol>
<p>if功能强于switch<br>if适合做区间匹配</p>
<ul>
<li><p>格式1：</p>
<pre class="line-numbers language-none"><code class="language-none">if (条件表达式)&#123;
    语句体;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;需求：心跳（60-100）之间是正常的，否则系统进一步检查
   &#x2F;&#x2F;格式1
   Scanner sc &#x3D; new Scanner(System.in);
   System.out.println(&quot;请输入您的年龄：&quot;);
   int heartBate &#x3D; sc.nextInt();
   if (heartBate &lt; 100 || heartBate &gt; 60) &#123;
       System.out.println(&quot;心跳正常&quot;);
   &#125;
   System.out.println(&quot;检查结束&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>格式2</p>
<pre class="line-numbers language-none"><code class="language-none">if (条件表达式)&#123;
    语句体1;
&#125; else &#123;
    语句体2;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>格式3</p>
<pre class="line-numbers language-none"><code class="language-none">if(条件表达式1)&#123;
    语句体1;
&#125; else if(条件表达式2)&#123;
    语句体2;
&#125; else if (条件表达式2)&#123;
    语句体2;
&#125; 
...
else &#123;
    语句体n+1;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<ol start="2">
<li>switch分支</li>
</ol>
<ul>
<li>适合做匹配的分支选择，结构清晰，格式良好。</li>
</ul>
<p>switch适合做值匹配</p>
<pre class="line-numbers language-none"><code class="language-none">switch(表达式)&#123;
    case 值1 :
       &#x2F;&#x2F;语句
       break; &#x2F;&#x2F;可选
    case 值2 :
       &#x2F;&#x2F;语句
       break; &#x2F;&#x2F;可选
    &#x2F;&#x2F;你可以有任意数量的case语句
    case 值n-1 ：
        break;
    default : &#x2F;&#x2F;可选
       &#x2F;&#x2F;执行第n条语句
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-none"><code class="language-none">package com.itheima.branch;

import java.util.Scanner;

public class SwitchDemo2 &#123;
    public static void main(String[] args) &#123;
        Scanner sc &#x3D; new Scanner(System.in);
        System.out.println(&quot;请输入您的等级：&quot;);
        char grade &#x3D; sc.next().charAt(0);&#x2F;&#x2F;Scanner键盘输入如何赋值给char类型变量
        switch(grade)
        &#123;
            case &#39;A&#39;:
                System.out.println(&quot;优秀&quot;);
                break;
            case &#39;B&#39; :
            case &#39;C&#39; :
                System.out.println(&quot;良好&quot;);
                break;
            case &#39;D&#39; :
                System.out.println(&quot;及格&quot;);
                break;
            case &#39;F&#39; :
                System.out.println(&quot;你需要再努力努力&quot;);
                break;
            default :
                System.out.println(&quot;未知等级&quot;);
        &#125;
        System.out.println(&quot;你的等级是 &quot; + grade);
    &#125;

    private static class string &#123;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>注意事项：</li>
<li><ul>
<li>表达式类型只能是 byte、short、int、char，JDK5开始支持枚举，JDK7开始支持String、不支持double、float、long。</li>
</ul>
</li>
<li><ul>
<li>case给出的值不允许重复，且只能是字面量，不能是变量。</li>
</ul>
</li>
<li><ul>
<li>不能忘记写break，会发生穿透。</li>
</ul>
</li>
</ul>
<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ol>
<li>for 循环</li>
</ol>
<ul>
<li>控制一段代码反复执行很多次。<br>格式:<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span>初始化语句<span class="token punctuation">;</span>循环条件<span class="token punctuation">;</span>迭代语句<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">(</span>重复执行的代码<span class="token punctuation">)</span>；
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>示例:<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token comment">//for循环</span>
        <span class="token comment">//输出3次HelloWord</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWord"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//循环5次</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWord"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例1<br>需求：求1 ~ 5 之间的数据和，并把求和结果输出。</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：求1 ~ 5 之间的数据和，并把求和结果输出。</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//i=1 2 3 4 5</span>
            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数据和为"</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>案例2<br>需求：求1 ~ 10的奇数和，并把求和结果在控制台上输出<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：求1 ~ 10的奇数和，并把求和结果在控制台上输出</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1~10的奇数和为"</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//另一种方法</span>
        <span class="token keyword">int</span> sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            sum1<span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1~10的奇数和为"</span> <span class="token operator">+</span> sum1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
方式：使用if筛选奇数，再通过循环累加。</li>
<li>案例3<br>需求：在控制台输出所有的“水仙花数”，水仙花数必须满足2个要求：</li>
<li><ul>
<li>水仙花数是一个三位数</li>
</ul>
</li>
<li><ul>
<li>水仙花数的个位，十位，百位的数字立方和等于原数</li>
</ul>
</li>
</ul>
<p>分析：使用for循环，从100一直到999<br>    提取该数字的个位、十位、百位<br>    使用 if 判断该数字个位、十位、百位的立方和是否为水仙花数</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForText4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//记录水仙花数出现的次数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> onesplace <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> tensplace <span class="token operator">=</span> i<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> hundredsplace <span class="token operator">=</span> i<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>onesplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>tensplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>hundredsplace<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出为一行,"\t"为空格</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"水仙花数的个数为"</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>while循环<pre class="line-numbers language-java" data-language="java"><code class="language-java">初始化语句<span class="token operator">:</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>循环语句<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">;</span>
    迭代语句<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
例子：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WhlieDemo5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<ul>
<li><p>什么时候使用for循环，什么时候使用while循环？</p>
</li>
<li><ul>
<li>功能上完全一样，for能解决的循环while也能解决，反之亦然。</li>
</ul>
</li>
<li><ul>
<li>使用规范是：知道循环几次，使用for循环；不知道循环几次，使用while循环。</li>
</ul>
</li>
<li><p>案例：珠穆朗玛峰（世界最高峰8848.86米）<br>需求：假如我有一张足够大的纸，它的厚度是0.1毫米，请问折叠多少次，可以折叠成珠穆朗玛峰的高度。<br>分析步骤：定义变量储存珠穆朗玛峰的高度和智障的高度。<br>使用while循环，循环条件是（纸张厚度小于珠穆朗玛峰）的高度，每折叠一次，纸张厚度为原来的两倍，循环外定义计数变量，每折叠一次，该变量+1.</p>
</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WhileText6</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">double</span> peakHeight <span class="token operator">=</span> <span class="token number">8848860</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> paperTickness <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>peakHeight <span class="token operator">></span> paperTickness<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            paperTickness <span class="token operator">*=</span><span class="token number">2</span><span class="token punctuation">;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"需要折叠"</span> <span class="token operator">+</span> count <span class="token operator">+</span><span class="token string">"次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"纸张的最终厚度为"</span> <span class="token operator">+</span> paperTickness <span class="token operator">+</span> <span class="token string">"毫米"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>do-while循环</li>
</ol>
<ul>
<li>先执行，再判断循环条件。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
    循环体语句<span class="token punctuation">;</span>
    迭代条件<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>循环条件<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
例子：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DoWhileDemo7</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//do while 循环</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="for-和-while-的区别："><a href="#for-和-while-的区别：" class="headerlink" title="for 和 while 的区别："></a>for 和 while 的区别：</h2><ul>
<li>for循环和while循环的执行流程是一样的</li>
<li>已知循环次数使用for循环，未知循环次数使用while循环。</li>
<li>for循环中，控制循环的变量只在循环中可以使用。while循环中，控制循环的变量在循环后还可以使用。</li>
</ul>
<h2 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h2><ul>
<li>一直循环下去，如果没有干预不会停止下来。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealForDemo8</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//for定义死循环</span>
<span class="token comment">//        for (;;)&#123;</span>
<span class="token comment">//           System.out.println("Hello World");</span>
<span class="token comment">//        &#125;</span>
        <span class="token comment">//while定义死循环</span>
<span class="token comment">//        //经典循环</span>
<span class="token comment">//        while (true)&#123;</span>
<span class="token comment">//            System.out.println("Hello World");</span>
<span class="token comment">//       &#125;</span>
        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例：密码验证<br>需求：系统密码是520，请用户不断的输入密码验证，验证不对输出密码错误，验证成功输出欢迎进入系统，并停止程序。</li>
</ul>
<p>分析：使用死循环，让用户不断输入数据<br>与密码比对，验证不成功密码错误。<br>验证成功输出欢迎进入系统，并使用break结束当前循环的执行。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DealForDemo8</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> okPassword <span class="token operator">=</span> <span class="token number">520</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入正确的密码："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> password <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>okPassword <span class="token operator">==</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码正确，登陆成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//可以立即结束当前循环</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"密码错误，"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>

        <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><p>循环中又包含循环</p>
<ul>
<li>循环嵌套的特点<br>外部循环一次，内部循环全部执行一次。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>loop</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForForDemo9</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//目标：理解嵌套循环的全部流程</span>
        <span class="token comment">//场景：5天，每天说3次Hello World</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>案例<br>需求：在控制台打出四行五列*矩阵<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="break-contnue-跳转控制语句"><a href="#break-contnue-跳转控制语句" class="headerlink" title="break contnue 跳转控制语句"></a>break contnue 跳转控制语句</h2><ul>
<li>break：跳出并结束当前所在循环的执行。</li>
<li>continue 跳出当前循环的当次执行，进入下一次循环。</li>
</ul>
<p>注意事项：</p>
<ul>
<li>break：只能用于结束所在循环，或者结束switch分支的执行。</li>
<li>continue：只能在循环中使用。</li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇文章</title>
    <url>//post/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0.html</url>
    <content><![CDATA[<h1 id="Java学习开始"><a href="#Java学习开始" class="headerlink" title="Java学习开始"></a>Java学习开始</h1>]]></content>
  </entry>
  <entry>
    <title>编程案例训练一</title>
    <url>//post/%E7%BC%96%E7%A8%8B%E6%A1%88%E4%BE%8B%E8%AE%AD%E7%BB%83%E4%B8%80.html</url>
    <content><![CDATA[<h1 id="Java编程案例训练"><a href="#Java编程案例训练" class="headerlink" title="Java编程案例训练"></a>Java编程案例训练</h1><ol>
<li>目的<ul>
<li>复习前半段课程学习的Java编程知识，能够使用所学知识解决问题，提升同学们的编程能力。</li>
</ul>
</li>
<li>涉及的知识点<ul>
<li>变量、数组</li>
<li>运算符：基本运算符、关系运算符、逻辑运算符…</li>
<li>程序流程控制：if、switch、for、while；死循环、循环嵌套。</li>
<li>方法</li>
</ul>
</li>
<li>编程思维<ul>
<li>使用所学的Java技术解决问题的思维方式和编写代码实现出来的能力。</li>
<li>前期：先模仿，后期：再创新。</li>
<li>具体措施：勤于练习代码，勤于思考，熟能生巧。</li>
</ul>
</li>
</ol>
<h2 id="案例一：买飞机票"><a href="#案例一：买飞机票" class="headerlink" title="案例一：买飞机票"></a>案例一：买飞机票</h2><ol>
<li>需求：<ul>
<li>机票价格按照淡季旺季、头等舱和经济舱收费、输入计票员及、月份和头等舱或经济舱。</li>
<li>机票最终优惠价格的计算方案如下：旺季（5-10月）头等舱9折，经济舱8.5折，单击（11月-来年4月）头等舱7折，经济舱6.5折。</li>
</ul>
</li>
<li>分析：<ul>
<li>键盘录入机票的原价，仓位类型，月份信息，调用方法返回机票最终的优惠价格。</li>
<li>方法内部应该先使用if分支判断月份是旺季还是淡季，然后使用switch分支判断是头等舱还是经济舱。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

        <span class="token comment">//需求 机票价格按照淡季旺季、头等舱和经济舱收费、输入计票员及、月份和头等舱或经济舱。</span>

        <span class="token comment">//1.先让用户输入机票</span>
        <span class="token class-name">Scanner</span> sc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入机票价格："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> ticket <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入机票的月份（1-12月）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入仓位类型"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> type <span class="token operator">=</span> sc1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你购买的机票价格是："</span> <span class="token operator">+</span> <span class="token function">getTicket</span><span class="token punctuation">(</span>ticket<span class="token punctuation">,</span>month<span class="token punctuation">,</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token keyword">double</span> ticket<span class="token punctuation">,</span><span class="token keyword">int</span> month<span class="token punctuation">,</span><span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//12月到5月是淡季</span>
            <span class="token comment">//判断是不是旺季</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>month <span class="token operator">>=</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> month <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">//判断是头等舱还是经济舱</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">case</span> <span class="token string">"头等舱"</span><span class="token operator">:</span>
                        ticket <span class="token operator">*=</span> <span class="token number">0.9</span> <span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token string">"经济舱"</span><span class="token operator">:</span>
                        ticket <span class="token operator">*=</span> <span class="token number">0.85</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的仓位错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>month <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> month <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>month <span class="token operator">>=</span> <span class="token number">11</span> <span class="token operator">&amp;&amp;</span> month <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">case</span> <span class="token string">"头等舱"</span><span class="token operator">:</span>
                        ticket <span class="token operator">*=</span> <span class="token number">0.7</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span>  <span class="token string">"经济舱"</span><span class="token operator">:</span>
                        ticket <span class="token operator">*=</span> <span class="token number">0.65</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的仓位错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的月份错误。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> ticket<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> (1) 遇到判断值匹配的时选择什么结构实现？<ul>
<li>使用switch分支结构实现。<br> (2)遇到区间范围的时候选择什么结构？</li>
<li>使用if分支结构。</li>
</ul>
</li>
</ol>
<h2 id="案例二：找素数"><a href="#案例二：找素数" class="headerlink" title="案例二：找素数"></a>案例二：找素数</h2><ol>
<li>说明：如果除了1和她本身以外，不能被其它正整数整除，就叫素数。</li>
<li>需求：判断101-200之间的素数，并输出所有素数。</li>
<li>分析：<ul>
<li>101 ~ 200之间的数据可以采用循环一次拿到；每拿到一个数，判断该属是否为素数。</li>
<li>判断规则：从2开始遍历到该数的一半的数据，看看是否有数据可以整除它，优则不是素数，有则不是素数，没有则是素数。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.定义一个循环，找到101-200之间的全部数据</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">102</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">200</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//i = 101 102 103 ... 199 200</span>
            <span class="token comment">//信号位，标记</span>
            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//一开始都认定为素数。</span>
            <span class="token comment">//2.判断是否为素数</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span> i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
                <span class="token comment">//3.判断判定的结果选择是否输出这个数据，是素数则输出。</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="案例三：开发验证码"><a href="#案例三：开发验证码" class="headerlink" title="案例三：开发验证码"></a>案例三：开发验证码</h2><ol>
<li>需求：<ul>
<li>定义方法实现随机产生一个5位的验证码，每位可能是数字、大写字母、小写字母。</li>
</ul>
</li>
<li>分析：<ul>
<li>定义一个方法，生成验证码返回：方法参数是位数，方法的返回值类型是String。</li>
<li>在方法内部使用for循环生成指定位数的随机字符。</li>
<li>把连接好的字符作为一组验证码进行返回。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//5.调用获取的验证码</span>
        <span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token function">creatCode</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"随机验证码是"</span> <span class="token operator">+</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">/**
     * 1.定义一个方法返回验证码，是否需要返回值类型声明？String 是否需要申明形参：int n。
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">creatCode</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

        <span class="token comment">//4.定义一个字符串变量记录生成的字符</span>
        <span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2.生成5位验证码，定义一个for循环，随机生成字符</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//3.随机生成一个数组，0：英文大写，1：英文小写，2：数字</span>
            <span class="token keyword">int</span> type <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
                    <span class="token comment">//大写字符，ASCII编码是[65,90]</span>
                    <span class="token keyword">char</span> ch1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    code <span class="token operator">+=</span> ch1<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                    <span class="token comment">//小写字符,ASCII编码是[97,122]</span>
                    <span class="token keyword">char</span> ch2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    code <span class="token operator">+=</span> ch2<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
                    <span class="token comment">//数字字符</span>
                    code <span class="token operator">+=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> code<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<ul>
<li>定义一个String类型的变量存储验证码字符。</li>
<li>定义一个for循环，循环5次</li>
<li>随机生成0|1|2的数据，依次代表当前位置要生成的数字|大写数字|小写数字。</li>
<li>把0、1、2交给switch生成对应类型的随机字符，把字符交给String变量</li>
<li>循环结束后，返回给String类型的变量即是所求的验证码结果。</li>
</ul>
</li>
</ol>
<h2 id="案例四：数组的复制"><a href="#案例四：数组的复制" class="headerlink" title="案例四：数组的复制"></a>案例四：数组的复制</h2><ol>
<li>需求：<ul>
<li>把一个数组中的元素复制到另外一个数组中去。</li>
</ul>
</li>
<li>分析：<ul>
<li>需要动态初始化一个数组，长度与原数组一样。</li>
<li>遍历数组的每一个元素，依次赋值给新数组。</li>
<li>输出两个数组的内容。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
        <span class="token comment">// int[] arr2 = arr1; //没有完成数组复制。</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr1<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">copy</span><span class="token punctuation">(</span> arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用数组1</span>
        <span class="token function">printAray</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用数组2</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//遍历复制后的数组的方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printAray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//若输出数组最后一位，则输出不加“，”号</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">==</span> arr2<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//将数组复制给别的数组</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<ul>
<li>数组的拷贝指需要创建新数组，把原来数组的元素赋值过来。</li>
</ul>
</li>
</ol>
<h2 id="案例五：评委打分"><a href="#案例五：评委打分" class="headerlink" title="案例五：评委打分"></a>案例五：评委打分</h2><ol>
<li>需求：<ul>
<li>在唱歌比赛中，有6名评委给选手打分，分数范围是[0-100]之间的整数。选手的最后得分为：去掉一个最高分、最低分后的4位评委的平均分，请完成上述过程并计算出选手的得分。</li>
</ul>
</li>
<li>分析：<ul>
<li>把6个评委的分数录入到程序中—-&gt;使用数组<br> <code>int[] score = new int[6];</code></li>
<li>遍历数组中的每个数据，进行累加求和，并找出最高分、最低分。</li>
<li>按照分数的计算规则算出平均分。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text5</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：计算去掉一个最高分、最低分后的4位评委的平均分</span>

        <span class="token comment">//1.定义一个数组</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> scores <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//2.录入数评委分数</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个评委打分"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//3.遍历数组中的数据，找出 最大值 最小值 总分</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> min <span class="token operator">=</span> scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//找出最大值</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                max <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token comment">//找出最小值</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">></span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                min <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            sum <span class="token operator">+=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//算出平均分</span>
        <span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token punctuation">(</span> sum <span class="token operator">-</span> max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.0</span> <span class="token operator">/</span> <span class="token punctuation">(</span>scores<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"选手的得分是："</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<ul>
<li>定义一个初始化的数组用于存储分数数据。</li>
<li>定义三个变量用于保存最大值、最小值和总和。</li>
<li>遍历数组中的两个元素，依次进行统计。</li>
<li>遍历结束后按照规则计算出结果即可。</li>
</ul>
</li>
</ol>
<h2 id="案例六：数字加密"><a href="#案例六：数字加密" class="headerlink" title="案例六：数字加密"></a>案例六：数字加密</h2><ol>
<li>需求：<ul>
<li>某系统的数字密码：比如1983，采用加密方式进行传输，规则如下：先得到每位数，然后每位数都加上5，在对10求余，最后将所有数字反转，得到一串新数。</li>
</ul>
</li>
<li>分析<ul>
<li>将每位数据存入数组之中去，遍历数组每位数据按照规则进行更改，把更改后的数据重新存入到数据中.</li>
<li>将数组的前后元素进行交换，数组中的最终元素就是加密后的结果。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Tex6</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//数据加密</span>

        <span class="token comment">//1.定义一个数组存入需要加密的数据</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入需要加密的个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> password <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">//2.录入需要加密的数字</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> password<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入需要加密的第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个数字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> k <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            password<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> k<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//3.打印数组内容看一下；</span>
        <span class="token function">printArray</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4.加密数组</span>
        <span class="token function">getPass</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//5.再次输出数组</span>
        <span class="token function">printArray</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//3.打印数组的方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//若输出数组最后一位，则输出不加“，”号</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">==</span> array<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//加密方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getPass</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//对数组进行加密</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//对数组数据进行反转</span>
        <span class="token keyword">int</span> date <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                date <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>array<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>array<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> （1）本次案例如何完成数组元素的反转？<ul>
<li>定义两个变量分别在占数组的首尾位置。</li>
<li>一个变量往前走，一个变量往后走，同步交换双方位置处的值。</li>
</ul>
</li>
</ol>
<h2 id="案例七：双色球系统-业务分析、随机生成一组中奖号码"><a href="#案例七：双色球系统-业务分析、随机生成一组中奖号码" class="headerlink" title="案例七：双色球系统-业务分析、随机生成一组中奖号码"></a>案例七：双色球系统-业务分析、随机生成一组中奖号码</h2><ol>
<li>需求：随机6个红球（1-33）不能重复，随机一个蓝球号码（1-16）。<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog%E5%8F%8C%E8%89%B2%E7%90%83%E7%B3%BB%E7%BB%9F.png" alt="双色球系统"></li>
<li>随机一组中奖号码的分析：<ul>
<li>中奖号码由6个红球和1个蓝球组成（注意：6个红球不能重复）。</li>
<li>可以定义方法用于返回一组中奖号码（7个数据），返回的形式是一个整型数组。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createLuckNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token comment">//a.定义一个动态初始化数组，存储7个数字</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">//b.念力数组，为每个位置生成对应的号码。</span>
    <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> date <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//取值（0-32）+ 1 --> (1-330</span>
            <span class="token comment">//定义一个flag变量，默认为data是没有重复</span>
            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> date<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            number<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//第7个位生成一个1-16和号码作为蓝球号码</span>
    number<span class="token punctuation">[</span>number<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> number<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结：<ul>
<li>每次随机一个红球号码去判断数组中是否存在。</li>
<li>存在需要重新随机一个数字直到不重复为止。</li>
</ul>
</li>
<li>用户输入一组双色球号码分析：<ul>
<li>定义一个方法，该方法可以录入用户输入的6个红球和1个蓝球号码</li>
<li>该方法最终需要返回一个数组，数组中就是用户录入的号码（7位）</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createLuckNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token comment">//a.定义一个动态初始化数组，存储7个数字</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">//b.念力数组，为每个位置生成对应的号码。</span>
    <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> date <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//取值（0-32）+ 1 --> (1-330</span>
            <span class="token comment">//定义一个flag变量，默认为data是没有重复</span>
            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> date<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            number<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//第7个位生成一个1-16和号码作为蓝球号码</span>
    number<span class="token punctuation">[</span>number<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> number<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>中奖情况判断的分析：<ul>
<li>定义一个方法，可以接受中奖号码的数组，用户选号的数组。</li>
<li>根据命中红球数和蓝球数判断最终获奖的中奖情况并输出详情和中奖金额。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">judge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> luckNumber<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> userNumber<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token comment">//判断是否中奖了</span>
    <span class="token comment">//LuckNumber = &#123;12,23,8,16,15,32,  9&#125;</span>
    <span class="token comment">//userNmuber = &#123;23,13,18,6,8,33,   10&#125;</span>
    <span class="token comment">//1.定义两个变量分别储存红球命中的个数，以及蓝球命中的个数</span>
    <span class="token keyword">int</span> redHitNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> blueHitNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">//2.判断红球命中几个</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> luckNumber<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> userNumber<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">//找到相等的意味着号码命中了</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>userNumber<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> luckNumber<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                redHitNumber <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//判断蓝球号码是否能命中</span>
    blueHitNumber <span class="token operator">=</span> luckNumber<span class="token punctuation">[</span>luckNumber<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">==</span> userNumber<span class="token punctuation">[</span>userNumber<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"中奖号码是："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printArray</span><span class="token punctuation">(</span>luckNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你投注的号码是："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printArray</span><span class="token punctuation">(</span>userNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你命中了"</span> <span class="token operator">+</span> redHitNumber <span class="token operator">+</span> <span class="token string">"个红球"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"命中了"</span><span class="token operator">:</span> <span class="token string">"没有命中"</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"蓝球"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//判断中奖情况</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了5元小奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">||</span> blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了10元小奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">||</span> blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了200元！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了3000元！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了500万元大奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了1000万元大奖！可以开始享受人生，诗和远方！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"感谢你为福利事业做出的突出贡献！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<ol>
<li>本此案例中是如何去统计红球的命中数量的？</li>
</ol>
<ul>
<li>遍历用户的每个选号，然后遍历中奖号码的数组。</li>
<li>看当前选号是否在中奖号码中存在，存在则命中数量加1。</li>
</ul>
</li>
<li>总代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text7</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.随机6个红球（1-33）不能重复，随机一个蓝球号码（1-16），可以采用数组装起来作为中奖号码</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> lucknumber <span class="token operator">=</span> <span class="token function">createLuckNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.调用一个方法让用户输入7个号码，作为用户选号</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> userNumber <span class="token operator">=</span> <span class="token function">userInputNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3.判断中奖情况</span>
        <span class="token function">judge</span><span class="token punctuation">(</span>lucknumber<span class="token punctuation">,</span>userNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">judge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> luckNumber<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> userNumber<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//判断是否中奖了</span>
        <span class="token comment">//LuckNumber = &#123;12,23,8,16,15,32,  9&#125;</span>
        <span class="token comment">//userNmuber = &#123;23,13,18,6,8,33,   10&#125;</span>
        <span class="token comment">//1.定义两个变量分别储存红球命中的个数，以及蓝球命中的个数</span>
        <span class="token keyword">int</span> redHitNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> blueHitNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">//2.判断红球命中几个</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> luckNumber<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> userNumber<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">//找到相等的意味着号码命中了</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>userNumber<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> luckNumber<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    redHitNumber <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//判断蓝球号码是否能命中</span>
        blueHitNumber <span class="token operator">=</span> luckNumber<span class="token punctuation">[</span>luckNumber<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">==</span> userNumber<span class="token punctuation">[</span>userNumber<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"中奖号码是："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printArray</span><span class="token punctuation">(</span>luckNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你投注的号码是："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printArray</span><span class="token punctuation">(</span>userNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你命中了"</span> <span class="token operator">+</span> redHitNumber <span class="token operator">+</span> <span class="token string">"个红球"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"命中了"</span><span class="token operator">:</span> <span class="token string">"没有命中"</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"蓝球"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//判断中奖情况</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了5元小奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">||</span> blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了10元小奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">5</span> <span class="token operator">||</span> blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了200元！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了3000元！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了500万元大奖！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>blueHitNumber <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> redHitNumber <span class="token operator">==</span> <span class="token number">6</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜你，中了1000万元大奖！可以开始享受人生，诗和远方！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"感谢你为福利事业做出的突出贡献！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">userInputNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//a.定义一个数组存储7个号码</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//b.让用户录入6个红球号码</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个红球号码（1-33要求）："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">int</span> date <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">//c.把当前录入的数据存入数组中去</span>
                number<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>

            <span class="token comment">//d.单独录入一个蓝球号码</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入蓝球号码（1-16）要求："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            number<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">createLuckNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//a.定义一个动态初始化数组，存储7个数字</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//b.念力数组，为每个位置生成对应的号码。</span>
        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">int</span> date <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//取值（0-32）+ 1 --> (1-330</span>
                <span class="token comment">//定义一个flag变量，默认为data是没有重复</span>
                <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> date<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                        flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                number<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> date<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">//第7个位生成一个1-16和号码作为蓝球号码</span>
        number<span class="token punctuation">[</span>number<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>表达式变量类型</title>
    <url>//post/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B.html</url>
    <content><![CDATA[<ol>
<li>小范围的类型会自动转换成大范围的类型运算。</li>
<li>最终类型由表达式中最高类型决定。</li>
<li>byte short char 是直接转换成int类型参与运算的。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDome</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//表达式的自动类型转换</span>
        <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> c <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> rs <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">;</span><span class="token comment">//转成double类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">double</span> rs2 <span class="token operator">=</span> a<span class="token operator">+</span>b <span class="token operator">-</span><span class="token number">2.3</span><span class="token punctuation">;</span><span class="token comment">//转成double类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//面试题</span>
        <span class="token keyword">byte</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> j <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> i<span class="token operator">+</span>j<span class="token punctuation">;</span><span class="token comment">//转成int类型</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>自动类型转换</title>
    <url>//post/%E8%87%AA%E5%8A%A8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>byte–short–int–long–float–double</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>type</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeDemo1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//自动类型转换</span>
        <span class="token comment">//类型范围小的变量可以直接赋值给类型范围大的变量</span>
        <span class="token keyword">byte</span> a <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> db <span class="token operator">=</span> age <span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为23.0</span>
        
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html</url>
    <content><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="面向对象概述"><a href="#面向对象概述" class="headerlink" title="面向对象概述"></a>面向对象概述</h2><ul>
<li>面向：找、拿。</li>
<li>对象：东西。</li>
<li>面向对象编程：找或拿东西过来编程。</li>
</ul>
<ol>
<li>面向对象编程的好处<br>符合人类思维习惯，编程更简单、更好理解。</li>
<li>面向对象学什么<br>学习自己设计对象并使用 —&gt; 必须掌握面向对象的语法</li>
</ol>
<h2 id="设计对象并使用"><a href="#设计对象并使用" class="headerlink" title="设计对象并使用"></a>设计对象并使用</h2><ol>
<li>类是什么<br>类（设计图）：是对象共同特征的描述；<br>对象：是真实存在的具体案例。<br>结论：在Java中必须先设计类，才能创建的对象并使用。</li>
<li>如何设计类<pre class="line-numbers language-java" data-language="java"><code class="language-java">pubilc <span class="token keyword">class</span> 类名<span class="token punctuation">&#123;</span>
    <span class="token number">1.</span>成员变量（代表属性，一般是名词）
    <span class="token number">2.</span>成员方法（代表行为，一般是动词）
    <span class="token number">3.</span>构造器
    <span class="token number">4.</span>代码块
    <span class="token number">5.</span>内部类
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">pubilc <span class="token keyword">class</span> <span class="token class-name">Car</span><span class="token punctuation">&#123;</span>
    <span class="token comment">//属性（成员变量）</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>
    <span class="token comment">//行为（方法）</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>
    pubilc <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>如何得到类的对象<pre class="line-numbers language-java" data-language="java"><code class="language-java">类名 对象名 <span class="token operator">=</span> <span class="token keyword">new</span> 类名<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Car</span> c <span class="token operator">=</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li>如何使用对象 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">*</span> 访问属性：对象名，成员变量
<span class="token operator">*</span> 访问行为：对象名<span class="token punctuation">.</span>方法名<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li>示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">createobject</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * 学会设计对象并使用
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text1</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//创建汽车变量</span>
        <span class="token class-name">Car</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"宝马"</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">38.9</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Car</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"奔驰"</span><span class="token punctuation">;</span>
        c2<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">39.9</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c2<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">createobject</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/**
    成员变量
     */</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>

    <span class="token comment">/**
     * 方法
     */</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"启动了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"价格是"</span> <span class="token operator">+</span> price <span class="token operator">+</span> <span class="token string">"的"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"跑得很快"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>示例结果<pre class="line-numbers language-java" data-language="java"><code class="language-java">
宝马
<span class="token number">38.9</span>
宝马启动了
价格是<span class="token number">38.9</span>的宝马跑得很快
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
奔驰
<span class="token number">39.9</span>
奔驰启动了
价格是<span class="token number">39.9</span>的奔驰跑得很快<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>练习：<ul>
<li>模仿汽车类，定义一个学生类</li>
<li>随便定义两个属性，两个行为。</li>
<li>并创建2个学生对象，分别访问属性和行为。<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">createobject</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//创建学生变量</span>
    <span class="token class-name">Student</span> n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    n<span class="token punctuation">.</span>names <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span>
    n<span class="token punctuation">.</span>ages <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>names<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Student</span> n2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        n2<span class="token punctuation">.</span>names <span class="token operator">=</span> <span class="token string">"李四"</span><span class="token punctuation">;</span>
        n2<span class="token punctuation">.</span>ages <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>names<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">createobject</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> names<span class="token punctuation">;</span>
    <span class="token keyword">int</span> ages<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"学生的名字是"</span> <span class="token operator">+</span> names<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"学生的年龄是"</span> <span class="token operator">+</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
代码结果：<pre class="line-numbers language-java" data-language="java"><code class="language-java">张三
<span class="token number">14</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
李四
<span class="token number">15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
</ol>
<h2 id="定义类的补充注意事项"><a href="#定义类的补充注意事项" class="headerlink" title="定义类的补充注意事项"></a>定义类的补充注意事项</h2><ul>
<li>类名首字母建议大写，且有意义，满足驼峰模式。</li>
<li>一个Java文件中可以定义多个class类，但只能一个类是public修饰，而且public修饰的类名必须成为代码文件名。<br>实际开放中建议还是一个文件定义一个class类。</li>
<li>成员变量的完整定义格式是：修饰符 数据类型 变量名称 &#x3D; 初始化值；一般无需指定初始化值，存在默认值。</li>
</ul>
<h2 id="面向对象内存机制"><a href="#面向对象内存机制" class="headerlink" title="面向对象内存机制"></a>面向对象内存机制</h2><ol>
<li>两个对象内存图</li>
</ol>
<p><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220726154653.png" alt="20220726154653"><br>2. 总结<br>    （1）对象放在哪个位置？<br>    * 堆内存中<br>    （2）Car c &#x3D; new Car（）；C变量名中储存的什么？<br>    * 存储的是对象在堆内存中的地址。<br>    （3）成员变量（name、price)的数据放在哪里，存在于哪个位置？<br>    * 对象中，存在于堆内存中<br>3. 两个变量指向同一个对象内存图</p>
<ul>
<li>图示：<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220726161837.png" alt="20220726161837"></li>
<li>示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">memory</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * 理解；两个变量指向同一个对象的内存运行机制
 */</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//创建学生对象</span>
        <span class="token class-name">Student</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"小明"</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token char">'男'</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">.</span>hobby <span class="token operator">=</span> <span class="token string">"吃饭睡觉学习"</span><span class="token punctuation">;</span>
        s1<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//把s1的值赋值给一个学生类型的变量s2。</span>
        <span class="token class-name">Student</span> s2 <span class="token operator">=</span> s1<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对象地址：memory.Student@4cb2c100</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对象地址：memory.Student@4cb2c100</span>

        s2<span class="token punctuation">.</span>hobby <span class="token operator">=</span> <span class="token string">"爱提问"</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果是：爱提问</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果是：爱提问</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">memory</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">char</span> sex<span class="token punctuation">;</span>
    <span class="token class-name">String</span> hobby<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"名称："</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"，性别："</span> <span class="token operator">+</span> sex <span class="token operator">+</span> <span class="token string">"，爱好："</span> <span class="token operator">+</span> hobby <span class="token operator">+</span> <span class="token string">"开始学习了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>运算符</title>
    <url>//post/%E8%BF%90%E7%AE%97%E7%AC%A6.html</url>
    <content><![CDATA[<h1 id="基本算数运算符"><a href="#基本算数运算符" class="headerlink" title="基本算数运算符"></a>基本算数运算符</h1><p>1.算数运算符</p>
<pre><code>    + - * 、 %
    加减乘除取余
</code></pre>
<p>2.注意点<br>两个整数做除法，其结果一定是整数</p>
<p>3.案例：数值拆分<br>需求：一个三位数拆分出个位、十位、百位。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorText2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//需求：一个三位数拆分出个位、十位、百位。</span>

        <span class="token keyword">int</span> date <span class="token operator">=</span> <span class="token number">963</span><span class="token punctuation">;</span>

        <span class="token comment">//各位</span>
        <span class="token keyword">int</span> ge <span class="token operator">=</span> date<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"个位是"</span><span class="token operator">+</span>ge<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//十位</span>
        <span class="token keyword">int</span> shi <span class="token operator">=</span> date<span class="token operator">/</span><span class="token number">10</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"十位是"</span><span class="token operator">+</span>shi<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//百位</span>
        <span class="token keyword">int</span> bai <span class="token operator">=</span> date<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"百位是"</span><span class="token operator">+</span>bai<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="符号做连接符"><a href="#符号做连接符" class="headerlink" title="+符号做连接符"></a>+符号做连接符</h1><p>“+”符号与字符串运算时是用作连接符的，其结果依然是字符串。</p>
<h1 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h1><p>++ 自增 变量自身的值加1<br>– 自减 变量自身的值减1</p>
<ol>
<li>++和–可以放在变量的前后边</li>
<li>++ – 只能操作变量，不能操作字面量的。</li>
<li>单独使用时，自增自减符号在变量前后没有区别</li>
</ol>
<ul>
<li>非单独使用时：在变量前，则先使用</li>
<li>非单独使用时：在变量后，则后使用</li>
</ul>
<p> #自增自减案例</p>
 <pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token comment">//拓展案例</span>
<span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token comment">//k 3 4 5</span>
<span class="token comment">//p 5 4 3</span>
<span class="token comment">//rs 3 + 5 - 4 + 4 - 5 + 4 + 2</span>
<span class="token keyword">int</span> rs <span class="token operator">=</span> k<span class="token operator">++</span> <span class="token operator">+</span> <span class="token operator">++</span>k <span class="token operator">-</span> <span class="token operator">--</span>p <span class="token operator">+</span> p<span class="token operator">--</span> <span class="token operator">-</span> k<span class="token operator">--</span> <span class="token operator">+</span> <span class="token operator">++</span>p <span class="token operator">+</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//k=4</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//p=4</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//rs=9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><p>就是“&#x3D;”</p>
<pre><code>+= 加后赋值
-= 减后赋值
*= 乘后赋值
/= 除后复制
%= 取余后赋值
</code></pre>
<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><pre><code>== 相等
!= 不相等
&gt;  大于
&gt;= 大于等于
&lt;  小于
&lt;= 小于等于
</code></pre>
<h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><pre><code>&amp; 逻辑与   必须都为ture，结果才是ture；只要有一个是false，结果就是false
| 逻辑或   只要有一个ture，结果就是ture
！逻辑非   你真我假，你假我真。ture=false，false=ture
^ 逻辑异或 两个条件都是false或者两个都是ture则结果是false，两个条件不同结果是ture。
</code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorDemo3</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//使用逻辑运算符</span>
        <span class="token keyword">double</span> size <span class="token operator">=</span> <span class="token number">9.8</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> storage <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
        <span class="token comment">//需求：尺寸大于6.95 内存大于8GB</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>size <span class="token operator">>=</span> <span class="token number">6.95</span> <span class="token operator">&amp;</span> storage <span class="token operator">>=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//需求：要么内存大于等于8GB，要么尺寸大于6.95</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>size <span class="token operator">>=</span> <span class="token number">6.95</span> <span class="token operator">|</span> storage <span class="token operator">>=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>

        <span class="token comment">//逻辑异或，两个结果不同才为true；</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">^</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为false</span>
        
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre><code>&amp;&amp;  短路与 判断结果与“&amp;&quot;相同，左边为false，右边则不执行
||  短路或 判断结果与“|&quot;相同，左边为ture，右边则不执行
</code></pre>
<p>注意：逻辑与”&amp;”,逻辑或”|”:无论左边是false还是true，右边都要执行。<br>    结果相同，过程不同。</p>
<h1 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h1><pre><code>格式：条件表达式？值1：值2；
</code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">operator</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OperatorDemo4</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//三运运算符</span>
        <span class="token keyword">double</span> score <span class="token operator">=</span> <span class="token number">98</span> <span class="token punctuation">;</span>
        <span class="token class-name">String</span> rs <span class="token operator">=</span> score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">"考试通过"</span><span class="token operator">:</span><span class="token string">"挂科"</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//从两个整数中找到最大值</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> a <span class="token operator">></span> b <span class="token operator">?</span> a<span class="token operator">:</span> b<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h1><table>
<thead>
<tr>
<th align="center">优先级</th>
<th align="center">运算符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">()</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">!、 +、  -、 ++、 – 自右向左</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">*、&#x2F;、%</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">+、-</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;、instanceof</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">&#x3D;&#x3D;、!&#x3D;</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">&amp;</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">^</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">逻辑或</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">&amp;&amp;</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">逻辑异或</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">? :</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、&amp;&#x3D;、</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象综合案例</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html</url>
    <content><![CDATA[<h1 id="面向对象综合案例"><a href="#面向对象综合案例" class="headerlink" title="面向对象综合案例"></a>面向对象综合案例</h1><h2 id="面向对象综合案例-模仿电影信息展示"><a href="#面向对象综合案例-模仿电影信息展示" class="headerlink" title="面向对象综合案例-模仿电影信息展示"></a>面向对象综合案例-模仿电影信息展示</h2><ol>
<li>需求<ul>
<li>使用面向对象编程，模仿电影信息的展示。</li>
</ul>
</li>
<li>分析<ul>
<li>一部电影是Java对象，需要先设计电影类，再创建电影对象。</li>
<li>三部电影对象可以采用数组存储起来。</li>
<li>依次遍历数组中的每个对象，取出其信息进行展示。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo2</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * 目标：完成电影信息的展示案例，理解面向对象编程的代码
 *
 * "《长津湖》",8.7,"吴京"
 * "《我和我的父辈》",9.6,"吴京"
 * "《扑水少年》",9.5,"王川"
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

        <span class="token comment">//1.设计电影类</span>
        <span class="token comment">//2.创建3个电影对象，封装电影的信息吧</span>
        <span class="token comment">//3.定义一个电影类型的数组存储3部电影对象</span>
        <span class="token class-name">Movie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> movies <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        movies<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token string">"《长津湖》"</span><span class="token punctuation">,</span><span class="token number">8.7</span><span class="token punctuation">,</span><span class="token string">"吴京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        movies<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token string">"《我和我的父辈》"</span><span class="token punctuation">,</span><span class="token number">9.6</span><span class="token punctuation">,</span><span class="token string">"吴京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        movies<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token string">"《扑水少年》"</span><span class="token punctuation">,</span><span class="token number">9.5</span><span class="token punctuation">,</span><span class="token string">"王川"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//4. 遍历数组每个电影对象，然后获取它的信息展示出来：</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> movies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Movie</span> m <span class="token operator">=</span> movies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"电影名:"</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"得分："</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"主演："</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo2</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Movie</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//1.成员变量</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> score<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> actor<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">Movie</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">double</span> score<span class="token punctuation">,</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actor <span class="token operator">=</span> actor<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">//2.seter和geter</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> score<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setScore</span><span class="token punctuation">(</span><span class="token keyword">double</span> score<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> actor<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setActor</span><span class="token punctuation">(</span><span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actor <span class="token operator">=</span> actor<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220728181442.png" alt="总结"></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象：Javabeen、综合案例</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%9AJavabeen%E3%80%81%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html</url>
    <content><![CDATA[<h1 id="面向对象：Javabeen、综合案例"><a href="#面向对象：Javabeen、综合案例" class="headerlink" title="面向对象：Javabeen、综合案例"></a>面向对象：Javabeen、综合案例</h1><h2 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h2><ol>
<li>JavaBean</li>
</ol>
<ul>
<li>也可以称为实体类，其对象可以用于在程序中封装数据。</li>
</ul>
<ol start="2">
<li>标准JavaBean须满足如下书写要求。</li>
</ol>
<ul>
<li>成员变量使用private修饰；</li>
<li>提供成员变量对应的setXxx()&#x2F;getXxx()方法。</li>
<li>必须提供一个午餐构造器；有参数构造器可写可不写的。</li>
</ul>
<ol start="3">
<li>示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">javabean</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.无参数构造器创建对象封装一个用户信息</span>
        <span class="token class-name">User</span> u1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        u1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        u1<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        u1<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2.有参数构造器创建对象封装一个用户信息</span>
        <span class="token class-name">User</span> u2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">156</span><span class="token punctuation">,</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">javabean</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//1.成员变量建议使用priveate私有</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> height<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> salary<span class="token punctuation">;</span>

    <span class="token comment">//无参数构造器</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * 3.要求提供无参数构造器，有参数构造器是可选的
     */</span>
    <span class="token comment">//生成有参数构造器，就需要再生成一个无参数构造器</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">double</span> height<span class="token punctuation">,</span> <span class="token keyword">double</span> salary<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * 2.我们必须提供成员变量对应的setXxx()/getXxx()方法。
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> height<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token keyword">double</span> height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> salary<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token keyword">double</span> salary<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="成员变量、局部变量区别"><a href="#成员变量、局部变量区别" class="headerlink" title="成员变量、局部变量区别"></a>成员变量、局部变量区别</h2><ol>
<li>成员变量和局部变量的区别<br><img data-src="https://cdn.jsdelivr.net/gh/hertzerbug/blog_img@main/Blog20220728172248.png" alt="成员变量和局部变量的区别"></li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象：封装</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%9A%E5%B0%81%E8%A3%85.html</url>
    <content><![CDATA[<h1 id="面向对象：封装"><a href="#面向对象：封装" class="headerlink" title="面向对象：封装"></a>面向对象：封装</h1><h2 id="封装思想概述"><a href="#封装思想概述" class="headerlink" title="封装思想概述"></a>封装思想概述</h2><ol>
<li>封装<ul>
<li>面向对象的三大特征：封装、继承、多态。</li>
<li>封装：告诉我们，如何正确设计对象的属性和方法。</li>
<li>封装的原则：对象代表什么，就得封装对应的数据，并提供数据对应的行为。</li>
</ul>
</li>
<li>需求：<ul>
<li>请设计一个人对象，且要求这个对象有名称有年龄，能吃饭、睡觉。 <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">&#123;</span>
    名称<span class="token punctuation">;</span>
    年龄<span class="token punctuation">;</span>
    吃饭<span class="token punctuation">;</span>
    睡觉<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li>示例<br>人画圆<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//人对象</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">&#123;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//圆对象</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Circle</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">double</span> randius<span class="token punctuation">;</span><span class="token comment">//半径</span>

    <span class="token comment">//画对象</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> （1）什么是封装？<ul>
<li>告诉我们，如何正确设计对象的属性和方法。</li>
<li>原则：对象代表什么，就得封装对应的数据，并提供数据对应的行为。<br> （2）理解封装思想有什么好处？</li>
<li>让编程变得很简单，有什么事，找对象，调方法就行</li>
<li>降低学习成本，有需要找API</li>
</ul>
</li>
</ol>
<h2 id="如何更好的封装"><a href="#如何更好的封装" class="headerlink" title="如何更好的封装"></a>如何更好的封装</h2><ul>
<li>一般建议对成员变量使用private（私有、隐藏)关键字修饰进（private修饰的成员只能在当前类中访问）。、</li>
<li>为每个成员提供配套的public修饰的getter、setter方法暴露其取值和赋值。</li>
</ul>
<ol>
<li>示例：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">encapsulation</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * 目标：学习如何更好的进行封装。
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text2</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Student</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">encapsulation</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//1.成员变量 使用private修饰，只能在本类中访问了</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token comment">/**
     * 提供全套的getter和setter方法暴露其取值和赋值
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你的年龄有问题！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> （1）如何进行更好的封装？<ul>
<li>一般会把成员变量使用private隐藏起来，对外就不能直接访问了。</li>
<li>使用public修饰的getter和setter方法暴露取值和赋值。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象编程训练：模拟购物车模块</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%AE%AD%E7%BB%83%EF%BC%9A%E6%A8%A1%E6%8B%9F%E8%B4%AD%E7%89%A9%E8%BD%A6%E6%A8%A1%E5%9D%97.html</url>
    <content><![CDATA[<h1 id="面向对象编程训练：模拟购物车模块"><a href="#面向对象编程训练：模拟购物车模块" class="headerlink" title="面向对象编程训练：模拟购物车模块"></a>面向对象编程训练：模拟购物车模块</h1><h2 id="购物车模块模拟-架构搭建"><a href="#购物车模块模拟-架构搭建" class="headerlink" title="购物车模块模拟-架构搭建"></a>购物车模块模拟-架构搭建</h2><ol>
<li>需求：模拟购物车模块的功能，需要添加商品到购物车中去，同时需要提供修改商品的购买数量，结算商品价格功能（请使用面向对象编程来解决）</li>
<li>分析：</li>
</ol>
<ul>
<li>购物车中的每个商品都是一个对象，需要定义一个商品类。</li>
<li>购物车本身也是一个对象：可以使用数组对象代表他。</li>
<li>完成界面架构，让用户选择操作的功能。</li>
</ul>
<ol start="3">
<li>基本代码：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShopCarText</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.定义商品类，用于后期创建商品对象</span>
        <span class="token comment">//2.定义购物车对象，使用一个数组对象标识。</span>
        <span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//3.搭建操作架构</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你选择如下命令进行操作："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"添加商品到购物车：add"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"查询商品到购物车：query"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"修改商品购买数量：update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"结算购买商品金额：pay"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入命令："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> command <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token keyword">case</span> <span class="token string">"add"</span><span class="token operator">:</span>
                <span class="token comment">//添加商品到购物车</span>
                <span class="token function">addGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"query"</span><span class="token operator">:</span>
                <span class="token comment">//查询商品到购物车</span>
                <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"apdate"</span><span class="token operator">:</span>
                <span class="token comment">//修改商品购买数量</span>
                <span class="token function">uodataGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"pay"</span><span class="token operator">:</span>
                <span class="token comment">//结算购买商品金额</span>
                <span class="token function">patGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token comment">//输入错误</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的命令错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">patGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">uodataGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">queryGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>阶段总结：<br> （1）购物车中的每个商品可以看成什么，需要先做什么准备？<ul>
<li>可以看作一个个对象</li>
<li>定义商品类：Goods，后期创建对象代表一个商品信息。<br> （2）购物车对象用什么表示的，可以用来干什么？</li>
<li>购物车可以使用商品类型的数组对象表示，可以用于存放商品对象。</li>
<li>Goods[] sharCar &#x3D; new Goods[];</li>
</ul>
</li>
</ol>
<h2 id="购物车模块模拟-添加商品到购物车、查看商品信息"><a href="#购物车模块模拟-添加商品到购物车、查看商品信息" class="headerlink" title="购物车模块模拟-添加商品到购物车、查看商品信息"></a>购物车模块模拟-添加商品到购物车、查看商品信息</h2><ol>
<li>需求：<ul>
<li>让用户输入商品信息，并加入到购物车中去，且可立即查看购物车信息。</li>
</ul>
</li>
<li>分析:<ul>
<li>需要让用户录入商品信息，创建对象封装商品信息。</li>
<li>并把商品对象加入到购物车数组中去。</li>
<li>查询购物车信息，就是便利购物车数组中的每个对象。</li>
</ul>
</li>
<li>代码实现<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**
  * 完成商品添加到购物车的功能
  *
  */</span>
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">,</span><span class="token class-name">Scanner</span> sc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
     <span class="token comment">//1.录入用户输入的购买商品的信息</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的编号（不重复）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">int</span> id <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的名称："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">String</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的数量："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">int</span> buyNumber <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的价格："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">double</span> price <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token comment">//2.把这些购买商品的信息封装成一个对象</span>
     <span class="token class-name">Goods</span> g <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     g<span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
     g<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
     g<span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>
     g<span class="token punctuation">.</span>buyNumber <span class="token operator">=</span> buyNumber<span class="token punctuation">;</span>

     <span class="token comment">//3.把这个商品对象添加到宿主中去</span>
     <span class="token comment">//shopCar = [a,a1,null,.....]</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
             <span class="token comment">//说明此位置没有元素录入，把我们新买的商品添加到此处即可</span>
             shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> g<span class="token punctuation">;</span>
             <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//不需要找位置，商品以及成功存入。</span>
         <span class="token punctuation">&#125;</span>
     <span class="token punctuation">&#125;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你的商品"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"添加到购物车完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**
 * 查询购物车中的商品对象信息，并展示出来；

 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">queryGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===查询购物车信息==="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"编号\t\t名称\t\t\t价格\t\t\t购买数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//shopCar = [g1,g2,g3,null,null...]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Goods</span> g <span class="token operator">=</span> shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//展示这个商品</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>price <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>buyNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//遍历结束</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>阶段总结<br> （1）如何完成的添加商品功能？<ul>
<li>创建Goods类的对象代表商品对象，封装用户输入的商品信息。</li>
<li>把商品第项存入到购物车的数组中去。<br> （2）如何查看购物和信息？</li>
<li>遍历购物车的数组，每遍历到一个商品对象输出其信息展示。</li>
</ul>
</li>
</ol>
<h2 id="购物车模块训练-修改购买数量"><a href="#购物车模块训练-修改购买数量" class="headerlink" title="购物车模块训练-修改购买数量"></a>购物车模块训练-修改购买数量</h2><ol>
<li>需求：让用户输入id，找出对应商品修改其购买数量</li>
<li>分析：<ul>
<li>定义方法能够根据用户输入的id去购物车数组中查看是否存在该商品对象。</li>
<li>存在返回该商品对象的地址，不存在返回null。</li>
<li>判断返回的对象地址是否存在，存在修改其购买数量，不存在就继续。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//方法：修改购买商品数量</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">updataGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">,</span><span class="token class-name">Scanner</span> sc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">//让用户输入要修改商品的id</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入要修改的商品id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> id <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Goods</span> g <span class="token operator">=</span> <span class="token function">getGoodsByte</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//没有该商品</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对不起，没有购买该商品！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
            <span class="token comment">//说明存在该商品对象，可以修改他</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入："</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"新的购买数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> buyNumber <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            g<span class="token punctuation">.</span>buyNumber <span class="token operator">=</span> buyNumber<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"修改完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> （1）如何修改商品的数量？<ul>
<li>根据用户输入的商品id查询出要修改的商品对象。</li>
</ul>
</li>
</ol>
<h2 id="购物车模块模拟-结算支付金额"><a href="#购物车模块模拟-结算支付金额" class="headerlink" title="购物车模块模拟-结算支付金额"></a>购物车模块模拟-结算支付金额</h2><ol>
<li>需求：<br>当用户输入pay命令后，需要展示全部购买的商品信息和总金额。</li>
<li>分析<ul>
<li>定义求和变量，遍历购物车数组中的全部商品，累加其单价*购买数量。</li>
</ul>
</li>
<li>代码实现：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//方法结算商品金额</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">patGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//定义一个求和变量累加金额</span>
        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//2.遍历购物车数组中的全部商品对象，累计单价*数量</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                money <span class="token operator">+=</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>price <span class="token operator">*</span> g<span class="token punctuation">.</span>buyNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"订单总金额："</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>总结<br> （1）如何进行商品订单总额进行计算？<ul>
<li>定义求和变量，遍历购物车数组中的全部商品，累加其单价*购买数量。</li>
</ul>
</li>
</ol>
<h2 id="全部代码实现"><a href="#全部代码实现" class="headerlink" title="全部代码实现"></a>全部代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShopCarText</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.定义商品类，用于后期创建商品对象</span>
        <span class="token comment">//2.定义购物车对象，使用一个数组对象标识。</span>
        <span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//3.搭建操作架构</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你选择如下命令进行操作："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"添加商品到购物车：add"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"查询商品到购物车：query"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"修改商品购买数量：update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"结算购买商品金额：pay"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"退出系统（0）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入命令："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> command <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">case</span> <span class="token string">"add"</span><span class="token operator">:</span>
                    <span class="token comment">//添加商品到购物车</span>
                    <span class="token function">addGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">,</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"query"</span><span class="token operator">:</span>
                    <span class="token comment">//查询商品到购物车</span>
                    <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"update"</span><span class="token operator">:</span>
                    <span class="token comment">//修改商品购买数量</span>
                    <span class="token function">updataGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">,</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"pay"</span><span class="token operator">:</span>
                    <span class="token comment">//结算购买商品金额</span>
                    <span class="token function">patGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token string">"0"</span><span class="token operator">:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token comment">//输入错误</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的命令错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token comment">//方法结算商品金额</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">patGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//定义一个求和变量累加金额</span>
        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//2.遍历购物车数组中的全部商品对象，累计单价*数量</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                money <span class="token operator">+=</span> <span class="token punctuation">(</span>g<span class="token punctuation">.</span>price <span class="token operator">*</span> g<span class="token punctuation">.</span>buyNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"订单总金额："</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">//方法：修改购买商品数量</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">updataGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">,</span><span class="token class-name">Scanner</span> sc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//让用户输入要修改商品的id</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入要修改的商品id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> id <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> <span class="token function">getGoodsByte</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//没有该商品</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对不起，没有购买该商品！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//说明存在该商品对象，可以修改他</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入："</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"新的购买数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> buyNumber <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token punctuation">.</span>buyNumber <span class="token operator">=</span> buyNumber<span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"修改完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">queryGoods</span><span class="token punctuation">(</span>shopCar<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//判断商品id是否存在</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Goods</span> <span class="token function">getGoodsByte</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar <span class="token punctuation">,</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//shopCar = [g1,g2,g3,null,null,...]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//判断这个商品对象的id是否是我们要找的</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                    <span class="token keyword">return</span> g<span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//代表找完100个商品也没有找到id一样的商品</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * 查询购物车中的商品对象信息，并展示出来；

     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">queryGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===查询购物车信息==="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"编号\t\t名称\t\t\t价格\t\t\t购买数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//shopCar = [g1,g2,g3,null,null...]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//展示这个商品</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>price <span class="token operator">+</span> <span class="token string">"\t\t"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>buyNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//遍历结束</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * 完成商品添加到购物车的功能
     *
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addGoods</span><span class="token punctuation">(</span><span class="token class-name">Goods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shopCar<span class="token punctuation">,</span><span class="token class-name">Scanner</span> sc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//1.录入用户输入的购买商品的信息</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的编号（不重复）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> id <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的名称："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的数量："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> buyNumber <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请你输入购买商品的价格："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> price <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2.把这些购买商品的信息封装成一个对象</span>
        <span class="token class-name">Goods</span> g <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g<span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        g<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        g<span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>
        g<span class="token punctuation">.</span>buyNumber <span class="token operator">=</span> buyNumber<span class="token punctuation">;</span>

        <span class="token comment">//3.把这个商品对象添加到宿主中去</span>
        <span class="token comment">//shopCar = [a,a1,null,.....]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shopCar<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token comment">//说明此位置没有元素录入，把我们新买的商品添加到此处即可</span>
                shopCar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> g<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//不需要找位置，商品以及成功存入。</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你的商品"</span> <span class="token operator">+</span> g<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"添加到购物车完成！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>














]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象：this关键字</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%9Athis%E5%85%B3%E9%94%AE%E5%AD%97.html</url>
    <content><![CDATA[<h1 id="面向对象：this关键字"><a href="#面向对象：this关键字" class="headerlink" title="面向对象：this关键字"></a>面向对象：this关键字</h1><ol>
<li>this关键字是什么</li>
</ol>
<ul>
<li>可以出现在构造器、方法中。</li>
<li>代表当前对象的地址。</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">thisdemo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//创建汽车对象</span>
        <span class="token class-name">Car</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">thisdemo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/**
     * 定义无参数构造器
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无参数构造器中的this："</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"方法中的："</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>代码结果：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">无参数构造器中的<span class="token keyword">this</span>：<span class="token class-name"><span class="token namespace">thisdemo<span class="token punctuation">.</span></span>Car</span><span class="token annotation punctuation">@6cd8737</span>
方法中的：<span class="token class-name"><span class="token namespace">thisdemo<span class="token punctuation">.</span></span>Car</span><span class="token annotation punctuation">@6cd8737</span>
<span class="token class-name"><span class="token namespace">thisdemo<span class="token punctuation">.</span></span>Car</span><span class="token annotation punctuation">@6cd8737</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>this关键字的作用</li>
</ol>
<ul>
<li>可以用于指定访问当前对象的成员变量、成员方法。</li>
</ul>
<ol start="3">
<li><p>this出现在有参数构造器中的用法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">constructor</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>
    <span class="token comment">/**
     * 有参数构造器
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">double</span> price<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==有参数构造器被调用了=="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> n<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>this出现在成员方法中的用法</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span><span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">goWith</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"正在和"</span><span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"一起比赛！"</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>总结<br> （1）this关键字是什么</p>
<ul>
<li>出现在构造器和成员方法中，代表当前对象的地址。<br> （2）this关键字在构造器中、成员方法可以做什么？</li>
<li>可以用于指定访问当前对象的成员。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象：构造器</title>
    <url>//post/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%9A%E6%9E%84%E9%80%A0%E5%99%A8.html</url>
    <content><![CDATA[<h1 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h1><ol>
<li><p>学习构造器的目的</p>
<ul>
<li>真正知道对象具体是通过调用什么代码得到的。</li>
<li>能够掌握位对象赋值的其他遍历写法</li>
<li>为以后学习面向对象编程的其他内容做支撑。</li>
</ul>
</li>
<li><p>构造器的作用</p>
<ul>
<li>定义在类中的，可以用于初始化一个类的对象，并返回对象的地址。<code>Car c = new Car()</code></li>
</ul>
</li>
<li><p>构造器的格式</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">修饰符 类名<span class="token punctuation">(</span>形参列表<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>示例:</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span><span class="token punctuation">&#123;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">//无参数构造器</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">&#125;</span>
    <span class="token comment">//有形参构造器</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">,</span><span class="token keyword">double</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>调用构造器得到对象的格式<br><code>类 变量名称 = new 构造器;</code><br><code>Car c = new Car()</code><br><code>Car c1 = new Car(&quot;奔驰&quot;，39.8);</code></p>
</li>
<li><p>构造器的分类和作用</p>
</li>
</ol>
<ul>
<li>无参数构造器（默认存在的）：初始化对象时，成员变量的数据均采用默认值。</li>
<li>有参数构造器：在初始化对象的时候，同时可以接受参数为对象赋值。</li>
</ul>
<ol start="6">
<li>构造器的注意事项</li>
</ol>
<ul>
<li>任何定义出来，默认就自带了无参数构造器，写不写都有。</li>
<li>一旦定义了有参数构造器，那么无参数构造器就没有了，如果还想用无参数构造器，此时就需要自己手写一个无参数构造器了。</li>
</ul>
<ol start="7">
<li><p>代码验证：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">constructor</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * 目标：认识构造器，明白两种类型的构造器的作用
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Text</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">//通过调用构造器得到对象</span>
        <span class="token class-name">Car</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>name <span class="token operator">=</span><span class="token string">"宝马"</span><span class="token punctuation">;</span>
        c<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">38.9</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//调用有参数构造器</span>
        <span class="token class-name">Car</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token string">"奔驰"</span><span class="token punctuation">,</span><span class="token number">49.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">constructor</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">double</span> price<span class="token punctuation">;</span>

    <span class="token comment">/**
     * 无参数构造器
     */</span>

    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==无参数构造器被调用了=="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment">/**
     * 有参数构造器
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">,</span><span class="token keyword">double</span> p<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==有参数构造器被调用了=="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        name <span class="token operator">=</span> n<span class="token punctuation">;</span>
        price <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>总结<br> （1）构造器的作用？</p>
<ul>
<li>初始化的对象，并返回对象的地址<br> （2）构造器有几种，各自的作用是什么？</li>
<li>无参数构造器：初始化对象时，成员变量的数据均采用默认值。</li>
<li>有参数构造器：在初始化对象的时候，同时可以接收参数为对象进行赋值。<br> （3）构造器有哪些注意事项</li>
<li>任何类定义出来，默认就自带了无参数构造器，写不写都有。</li>
<li>一旦定义了有参数构造器，无参数构造器就没有了，此时就需要自己写无参数构造器。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Java入门</tag>
      </tags>
  </entry>
</search>
